{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/amalsalim/Desktop/projects/eveninghobby/react-native-first/components/PhoneNumberInput.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input } from 'react-native-elements';\nimport { AsYouType } from 'libphonenumber-js';\n\nvar PhoneNumberInputs = function PhoneNumberInputs(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      formattedNumber = _useState2[0],\n      setFormattedNumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      absoluteNumber = _useState4[0],\n      setAbsoluteNumber = _useState4[1];\n\n  function on_change(data) {\n    if (data.length < formattedNumber.length && formattedNumber.charAt(formattedNumber.length - 1) == ')') {\n      setFormattedNumber(data);\n      return;\n    }\n\n    if (data.charAt(0) == \"1\" && data.length > 16) {\n      return;\n    }\n\n    if (data.charAt(0) != \"1\" && data.length > 14) {\n      return;\n    }\n\n    setFormattedNumber(new AsYouType('US').input(data));\n  }\n\n  function on_blur(data) {\n    var absolute_number = formattedNumber.replace(/[^0-9]/g, '');\n\n    if (absolute_number.length == 10 || absolute_number.length == 11) {\n      setAbsoluteNumber(absolute_number);\n    } else {\n      console.log(\"phone number is not filled in\");\n    }\n\n    console.log(\"hi amal\");\n    console.log(absoluteNumber);\n  }\n\n  return React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"(918)-859-2034\",\n    errorStyle: {\n      color: 'red'\n    },\n    errorMessage: \"\",\n    label: \"Phone number\",\n    color: \"white\",\n    onChangeText: on_change,\n    value: formattedNumber,\n    onBlur: on_blur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: \"80%\",\n    height: \"12%\"\n  }\n});\nexport default PhoneNumberInputs;","map":{"version":3,"sources":["/Users/amalsalim/Desktop/projects/eveninghobby/react-native-first/components/PhoneNumberInput.js"],"names":["React","useState","Input","AsYouType","PhoneNumberInputs","props","formattedNumber","setFormattedNumber","absoluteNumber","setAbsoluteNumber","on_change","data","length","charAt","input","on_blur","absolute_number","replace","console","log","styles","color","StyleSheet","create","width","height"],"mappings":";;AAIA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAAQC,KAAR,QAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAAA,kBAEeJ,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,MAExBK,eAFwB;AAAA,MAEPC,kBAFO;;AAAA,mBAGaN,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGxBO,cAHwB;AAAA,MAGRC,iBAHQ;;AAK/B,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAKrB,QAAIA,IAAI,CAACC,MAAL,GAAcN,eAAe,CAACM,MAA9B,IACAN,eAAe,CAACO,MAAhB,CAAuBP,eAAe,CAACM,MAAhB,GAAyB,CAAhD,KAAsD,GAD1D,EAC+D;AAC3DL,MAAAA,kBAAkB,CAACI,IAAD,CAAlB;AACA;AACH;;AAGD,QAAIA,IAAI,CAACE,MAAL,CAAY,CAAZ,KAAkB,GAAlB,IAAyBF,IAAI,CAACC,MAAL,GAAc,EAA3C,EAA+C;AAC3C;AACH;;AAGD,QAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,KAAkB,GAAlB,IAAyBF,IAAI,CAACC,MAAL,GAAc,EAA3C,EAA+C;AAC3C;AACH;;AAEDL,IAAAA,kBAAkB,CAAC,IAAIJ,SAAJ,CAAc,IAAd,EAAoBW,KAApB,CAA0BH,IAA1B,CAAD,CAAlB;AAEH;;AAED,WAASI,OAAT,CAAiBJ,IAAjB,EAAuB;AACnB,QAAIK,eAAe,GAAGV,eAAe,CAACW,OAAhB,CAAwB,SAAxB,EAAmC,EAAnC,CAAtB;;AACA,QAAID,eAAe,CAACJ,MAAhB,IAA0B,EAA1B,IAAgCI,eAAe,CAACJ,MAAhB,IAA0B,EAA9D,EAAkE;AAC9DH,MAAAA,iBAAiB,CAACO,eAAD,CAAjB;AACH,KAFD,MAEO;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYX,cAAZ;AACH;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,gBADhB;AAEI,IAAA,UAAU,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGI,IAAA,YAAY,EAAC,EAHjB;AAII,IAAA,KAAK,EAAC,cAJV;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,YAAY,EAAEX,SANlB;AAOI,IAAA,KAAK,EAAEJ,eAPX;AAQI,IAAA,MAAM,EAAES,OARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAeH,CAxDD;;AA0DA,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,KAAK,EAAE;AACHU,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL;AADsB,CAAlB,CAAf;AAOA,eAAerB,iBAAf","sourcesContent":["/*\n * Sample component code\n */\n\nimport React, {useState} from 'react';\nimport { View, StyleSheet } from 'react-native'\nimport {Input} from 'react-native-elements'\nimport { AsYouType } from 'libphonenumber-js'\n\n\nconst PhoneNumberInputs = props => {\n\n    const [formattedNumber, setFormattedNumber] = useState('')\n    const [absoluteNumber, setAbsoluteNumber] = useState('')\n\n    function on_change(data) {\n        /* \n         * bug inside parsePhoneNumberFromString \n         * Happens when number is (324) and you hit backspace\n         */\n        if (data.length < formattedNumber.length &&\n            formattedNumber.charAt(formattedNumber.length - 1) == ')') {\n            setFormattedNumber(data)\n            return\n        }\n\n        /* \"1 (789) 234-7893\" */\n        if (data.charAt(0) == \"1\" && data.length > 16) {\n            return\n        }\n\n        /* \"(789) 234-7893\" */\n        if (data.charAt(0) != \"1\" && data.length > 14) {\n            return\n        }\n\n        setFormattedNumber(new AsYouType('US').input(data));\n\n    }\n\n    function on_blur(data) {\n        let absolute_number = formattedNumber.replace(/[^0-9]/g, '');\n        if (absolute_number.length == 10 || absolute_number.length == 11) {\n            setAbsoluteNumber(absolute_number)\n        } else {\n            console.log(\"phone number is not filled in\")\n        }\n        console.log(\"hi amal\")\n        console.log(absoluteNumber)\n    }\n\n    return (\n        <View style={styles.input}>\n            <Input\n                placeholder='(918)-859-2034'\n                errorStyle={{ color: 'red' }}\n                errorMessage=''\n                label='Phone number'\n                color=\"white\"\n                onChangeText={on_change}\n                value={formattedNumber}\n                onBlur={on_blur}\n            />\n        </View>\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        width: \"80%\",\n        height: \"12%\"\n    },\n});\n\nexport default PhoneNumberInputs"]},"metadata":{},"sourceType":"module"}