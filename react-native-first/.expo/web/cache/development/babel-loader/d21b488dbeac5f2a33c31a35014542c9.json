{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/amalsalim/Desktop/projects/eveninghobby/react-native-first/App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PersonalInformation from \"./components/PersonalInformation\";\nimport CardInfo from \"./components/CardInfo\";\nimport { Input } from 'react-native-elements';\nimport { formatNumber } from \"libphonenumber-js\";\nimport { AsYouType, parsePhoneNumberFromString, findPhoneNumbersInText } from 'libphonenumber-js';\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentScreen = _useState2[0],\n      setCurrentScreen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formattedNumber = _useState4[0],\n      setFormattedNumber = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      absoluteNumber = _useState6[0],\n      setAbsoluteNumber = _useState6[1];\n\n  function on_change(data) {\n    if (data.length < formattedNumber.length && formattedNumber.charAt(formattedNumber.length - 1) == ')') {\n      setFormattedNumber(data);\n      return;\n    }\n\n    if (data.charAt(0) == \"1\" && data.length > 16) {\n      return;\n    }\n\n    if (data.charAt(0) != \"1\" && data.length > 14) {\n      return;\n    }\n\n    setFormattedNumber(new AsYouType('US').input(data));\n  }\n\n  function on_blur(data) {\n    var absolute_number = formattedNumber.replace(/[^0-9]/g, '');\n\n    if (absolute_number.length == 10 || absolute_number.length == 11) {\n      setAbsoluteNumber(absolute_number);\n    } else {\n      console.log(\"phone number is not filled in\");\n    }\n  }\n\n  if (currentScreen == 0) {\n    return React.createElement(PersonalInformation, {\n      setPersonalInfo: setCurrentScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    });\n  } else if (currentScreen == 1) {\n    return React.createElement(CardInfo, {\n      setCardInfo: setCurrentScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, {\n      placeholder: \"(918)-859-2034\",\n      errorStyle: {\n        color: 'red'\n      },\n      errorMessage: \"\",\n      label: \"Phone number\",\n      color: \"white\",\n      onChangeText: on_change,\n      value: formattedNumber,\n      onBlur: on_blur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), React.createElement(Input, {\n      placeholder: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;\nvar styles = StyleSheet.create({\n  test: {\n    backgroundColor: \"rgba(60, 80, 101, 0.5)\"\n  }\n});","map":{"version":3,"sources":["/Users/amalsalim/Desktop/projects/eveninghobby/react-native-first/App.js"],"names":["React","useState","PersonalInformation","CardInfo","Input","formatNumber","AsYouType","parsePhoneNumberFromString","findPhoneNumbersInText","App","currentScreen","setCurrentScreen","formattedNumber","setFormattedNumber","absoluteNumber","setAbsoluteNumber","on_change","data","length","charAt","input","on_blur","absolute_number","replace","console","log","color","styles","StyleSheet","create","test","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,mBAAP;AACA,OAAOC,QAAP;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,SAAT,EAAoBC,0BAApB,EAAgDC,sBAAhD,QAA+E,mBAA/E;AAIA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAMcR,QAAQ,CAAC,CAAD,CANtB;AAAA;AAAA,MAMrBS,aANqB;AAAA,MAMNC,gBANM;;AAAA,mBAOkBV,QAAQ,CAAC,EAAD,CAP1B;AAAA;AAAA,MAOrBW,eAPqB;AAAA,MAOJC,kBAPI;;AAAA,mBAQgBZ,QAAQ,CAAC,EAAD,CARxB;AAAA;AAAA,MAQrBa,cARqB;AAAA,MAQLC,iBARK;;AAU5B,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAKvB,QAAIA,IAAI,CAACC,MAAL,GAAcN,eAAe,CAACM,MAA9B,IACEN,eAAe,CAACO,MAAhB,CAAuBP,eAAe,CAACM,MAAhB,GAAuB,CAA9C,KAAoD,GAD1D,EAC+D;AAC7DL,MAAAA,kBAAkB,CAACI,IAAD,CAAlB;AACA;AACD;;AAGD,QAAIA,IAAI,CAACE,MAAL,CAAY,CAAZ,KAAkB,GAAlB,IAAyBF,IAAI,CAACC,MAAL,GAAc,EAA3C,EAAgD;AAC9C;AACD;;AAGD,QAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,KAAkB,GAAlB,IAAyBF,IAAI,CAACC,MAAL,GAAc,EAA3C,EAA+C;AAC7C;AACD;;AAEDL,IAAAA,kBAAkB,CAAC,IAAIP,SAAJ,CAAc,IAAd,EAAoBc,KAApB,CAA0BH,IAA1B,CAAD,CAAlB;AAED;;AAED,WAASI,OAAT,CAAiBJ,IAAjB,EAAuB;AACrB,QAAIK,eAAe,GAAGV,eAAe,CAACW,OAAhB,CAAwB,SAAxB,EAAmC,EAAnC,CAAtB;;AACA,QAAID,eAAe,CAACJ,MAAhB,IAA0B,EAA1B,IAAgCI,eAAe,CAACJ,MAAhB,IAA0B,EAA9D,EAAkE;AAChEH,MAAAA,iBAAiB,CAACO,eAAD,CAAjB;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACF;;AAGD,MAAIf,aAAa,IAAI,CAArB,EAAwB;AACtB,WAAQ,oBAAC,mBAAD;AAAqB,MAAA,eAAe,EAAEC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFD,MAEO,IAAID,aAAa,IAAI,CAArB,EAAwB;AAC7B,WAAQ,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAEC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFM,MAEA;AACL,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,UAAU,EAAE;AAAEe,QAAAA,KAAK,EAAE;AAAT,OAFd;AAGE,MAAA,YAAY,EAAC,EAHf;AAIE,MAAA,KAAK,EAAC,cAJR;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,YAAY,EAAEV,SANhB;AAOE,MAAA,KAAK,EAAEJ,eAPT;AAQE,MAAA,MAAM,EAAES,OARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;AACF;AAAA;AAED,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb;AADyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport PersonalInformation from './components/PersonalInformation'\nimport CardInfo from './components/CardInfo'\nimport { Input } from 'react-native-elements';\nimport { formatNumber } from \"libphonenumber-js\";\nimport { AsYouType, parsePhoneNumberFromString, findPhoneNumbersInText  } from 'libphonenumber-js'\n\n\n\nexport default function App() {\n\n  /*\n   * currentScreen initial value should come from\n   * backend, saying whether this person is new or not\n   */\n  const [currentScreen, setCurrentScreen] = useState(0);\n  const [formattedNumber, setFormattedNumber] = useState('')\n  const [absoluteNumber, setAbsoluteNumber] = useState('')\n\n  function on_change(data) {\n    /* \n     * bug inside parsePhoneNumberFromString \n     * Happens when number is (324) and you hit backspace\n     */\n    if (data.length < formattedNumber.length && \n          formattedNumber.charAt(formattedNumber.length-1) == ')') {\n      setFormattedNumber(data)\n      return\n    }\n\n    /* \"1 (789) 234-7893\" */\n    if (data.charAt(0) == \"1\" && data.length > 16 ) {\n      return\n    }\n\n    /* \"(789) 234-7893\" */\n    if (data.charAt(0) != \"1\" && data.length > 14) {\n      return\n    }    \n  \n    setFormattedNumber(new AsYouType('US').input(data));\n  \n  }\n\n  function on_blur(data) {\n    let absolute_number = formattedNumber.replace(/[^0-9]/g, '');\n    if (absolute_number.length == 10 || absolute_number.length == 11) {\n      setAbsoluteNumber(absolute_number)\n    } else {\n      console.log(\"phone number is not filled in\")\n    }\n  }\n  \n\n  if (currentScreen == 0) {\n    return (<PersonalInformation setPersonalInfo={setCurrentScreen} />)\n  } else if (currentScreen == 1) {\n    return (<CardInfo setCardInfo={setCurrentScreen} />)\n  } else {\n    return (\n      <View>\n        <Input\n          placeholder='(918)-859-2034'\n          errorStyle={{ color: 'red' }}\n          errorMessage=''\n          label='Phone number'\n          color=\"white\"\n          onChangeText={on_change}\n          value={formattedNumber}\n          onBlur={on_blur}\n        />\n        <Input placeholder=\"test\"/>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  test: {\n    backgroundColor: \"rgba(60, 80, 101, 0.5)\",\n  }\n});"]},"metadata":{},"sourceType":"module"}