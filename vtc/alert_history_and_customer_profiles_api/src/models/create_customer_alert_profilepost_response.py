# coding: utf-8

"""
    Alert History and Customer Profiles API

    The Alert History and Customer Profiles API is used to retrieve alert history information and for issuers using the VTC Alert Delivery Service to store cardholder contact information.

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class CreateCustomerAlertProfilepostResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, collection_resource_of_customer_profile_document=None, customer_profile_document=None):
        """
        CreateCustomerAlertProfilepostResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'collection_resource_of_customer_profile_document': 'CollectionResourceOfCustomerProfileDocument',
            'customer_profile_document': 'CustomerProfileDocument'
        }

        self.attribute_map = {
            'collection_resource_of_customer_profile_document': 'CollectionResourceOfCustomerProfileDocument',
            'customer_profile_document': 'CustomerProfileDocument'
        }

        self._collection_resource_of_customer_profile_document = collection_resource_of_customer_profile_document
        self._customer_profile_document = customer_profile_document

    @property
    def collection_resource_of_customer_profile_document(self):
        """
        Gets the collection_resource_of_customer_profile_document of this CreateCustomerAlertProfilepostResponse.

        :return: The collection_resource_of_customer_profile_document of this CreateCustomerAlertProfilepostResponse.
        :rtype: CollectionResourceOfCustomerProfileDocument
        """
        return self._collection_resource_of_customer_profile_document

    @collection_resource_of_customer_profile_document.setter
    def collection_resource_of_customer_profile_document(self, collection_resource_of_customer_profile_document):
        """
        Sets the collection_resource_of_customer_profile_document of this CreateCustomerAlertProfilepostResponse.

        :param collection_resource_of_customer_profile_document: The collection_resource_of_customer_profile_document of this CreateCustomerAlertProfilepostResponse.
        :type: CollectionResourceOfCustomerProfileDocument
        """

        self._collection_resource_of_customer_profile_document = collection_resource_of_customer_profile_document

    @property
    def customer_profile_document(self):
        """
        Gets the customer_profile_document of this CreateCustomerAlertProfilepostResponse.

        :return: The customer_profile_document of this CreateCustomerAlertProfilepostResponse.
        :rtype: CustomerProfileDocument
        """
        return self._customer_profile_document

    @customer_profile_document.setter
    def customer_profile_document(self, customer_profile_document):
        """
        Sets the customer_profile_document of this CreateCustomerAlertProfilepostResponse.

        :param customer_profile_document: The customer_profile_document of this CreateCustomerAlertProfilepostResponse.
        :type: CustomerProfileDocument
        """

        self._customer_profile_document = customer_profile_document

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, CreateCustomerAlertProfilepostResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

# ----------------------------------------------------------------------------------------------------------------------
# © Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
# FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------