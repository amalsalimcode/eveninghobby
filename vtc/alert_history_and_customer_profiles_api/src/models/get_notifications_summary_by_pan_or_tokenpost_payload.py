# coding: utf-8

"""
    Alert History and Customer Profiles API

    The Alert History and Customer Profiles API is used to retrieve alert history information and for issuers using the VTC Alert Delivery Service to store cardholder contact information.

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class GetNotificationsSummaryByPanOrTokenpostPayload(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, pagination=None, include_alert_details=None, include_merchant_details=None, time_range=None, include_contact_details=None, primary_account_number=None, payment_token=None):
        """
        GetNotificationsSummaryByPanOrTokenpostPayload - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'pagination': 'Pagination',
            'include_alert_details': 'bool',
            'include_merchant_details': 'bool',
            'time_range': 'TimeRange',
            'include_contact_details': 'bool',
            'primary_account_number': 'str',
            'payment_token': 'str'
        }

        self.attribute_map = {
            'pagination': 'pagination',
            'include_alert_details': 'includeAlertDetails',
            'include_merchant_details': 'includeMerchantDetails',
            'time_range': 'timeRange',
            'include_contact_details': 'includeContactDetails',
            'primary_account_number': 'primaryAccountNumber',
            'payment_token': 'paymentToken'
        }

        self._pagination = pagination
        self._include_alert_details = include_alert_details
        self._include_merchant_details = include_merchant_details
        self._time_range = time_range
        self._include_contact_details = include_contact_details
        self._primary_account_number = primary_account_number
        self._payment_token = payment_token

    @property
    def pagination(self):
        """
        Gets the pagination of this GetNotificationsSummaryByPanOrTokenpostPayload.

        :return: The pagination of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: Pagination
        """
        return self._pagination

    @pagination.setter
    def pagination(self, pagination):
        """
        Sets the pagination of this GetNotificationsSummaryByPanOrTokenpostPayload.

        :param pagination: The pagination of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: Pagination
        """
        if pagination is None:
            raise ValueError("Invalid value for `pagination`, must not be `None`")

        self._pagination = pagination

    @property
    def include_alert_details(self):
        """
        Gets the include_alert_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if alertDetails object will be populated in response. Defaults to false

        :return: The include_alert_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: bool
        """
        return self._include_alert_details

    @include_alert_details.setter
    def include_alert_details(self, include_alert_details):
        """
        Sets the include_alert_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if alertDetails object will be populated in response. Defaults to false

        :param include_alert_details: The include_alert_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: bool
        """

        self._include_alert_details = include_alert_details

    @property
    def include_merchant_details(self):
        """
        Gets the include_merchant_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if merchantInfo object will be populated in response. Defaults to false

        :return: The include_merchant_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: bool
        """
        return self._include_merchant_details

    @include_merchant_details.setter
    def include_merchant_details(self, include_merchant_details):
        """
        Sets the include_merchant_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if merchantInfo object will be populated in response. Defaults to false

        :param include_merchant_details: The include_merchant_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: bool
        """

        self._include_merchant_details = include_merchant_details

    @property
    def time_range(self):
        """
        Gets the time_range of this GetNotificationsSummaryByPanOrTokenpostPayload.

        :return: The time_range of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: TimeRange
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """
        Sets the time_range of this GetNotificationsSummaryByPanOrTokenpostPayload.

        :param time_range: The time_range of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: TimeRange
        """

        self._time_range = time_range

    @property
    def include_contact_details(self):
        """
        Gets the include_contact_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if contacts object will be populated in response. Defaults to false

        :return: The include_contact_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: bool
        """
        return self._include_contact_details

    @include_contact_details.setter
    def include_contact_details(self, include_contact_details):
        """
        Sets the include_contact_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        Indicate if contacts object will be populated in response. Defaults to false

        :param include_contact_details: The include_contact_details of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: bool
        """

        self._include_contact_details = include_contact_details

    @property
    def primary_account_number(self):
        """
        Gets the primary_account_number of this GetNotificationsSummaryByPanOrTokenpostPayload.
        The card number for which the alert history details are to be returned, must be between 16 and 19

        :return: The primary_account_number of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: str
        """
        return self._primary_account_number

    @primary_account_number.setter
    def primary_account_number(self, primary_account_number):
        """
        Sets the primary_account_number of this GetNotificationsSummaryByPanOrTokenpostPayload.
        The card number for which the alert history details are to be returned, must be between 16 and 19

        :param primary_account_number: The primary_account_number of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: str
        """

        self._primary_account_number = primary_account_number

    @property
    def payment_token(self):
        """
        Gets the payment_token of this GetNotificationsSummaryByPanOrTokenpostPayload.
        The paymentToken number for which the alert history details are to be returned

        :return: The payment_token of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :rtype: str
        """
        return self._payment_token

    @payment_token.setter
    def payment_token(self, payment_token):
        """
        Sets the payment_token of this GetNotificationsSummaryByPanOrTokenpostPayload.
        The paymentToken number for which the alert history details are to be returned

        :param payment_token: The payment_token of this GetNotificationsSummaryByPanOrTokenpostPayload.
        :type: str
        """

        self._payment_token = payment_token

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, GetNotificationsSummaryByPanOrTokenpostPayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

# ----------------------------------------------------------------------------------------------------------------------
# Â© Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the âSoftwareâ) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN âAS IS,â âAS AVAILABLE,â âWITH ALL
# FAULTSâ BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------