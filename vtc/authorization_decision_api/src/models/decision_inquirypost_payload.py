# coding: utf-8

"""
    Authorization API

    The Authorization Decision API enables an authorization processor to request an authorization decision recommendation based on cardholder rules configured in consumer transaction controls.  In addition, the API enables the authorization processor to update an authorization decision with the actual decision that was rendered. 

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DecisionInquirypostPayload(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, card_acceptor_terminal_id=None, retrieval_reference_number=None, date_time_local=None):
        """
        DecisionInquirypostPayload - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'card_acceptor_terminal_id': 'str',
            'retrieval_reference_number': 'str',
            'date_time_local': 'str'
        }

        self.attribute_map = {
            'card_acceptor_terminal_id': 'cardAcceptorTerminalID',
            'retrieval_reference_number': 'retrievalReferenceNumber',
            'date_time_local': 'dateTimeLocal'
        }

        self._card_acceptor_terminal_id = card_acceptor_terminal_id
        self._retrieval_reference_number = retrieval_reference_number
        self._date_time_local = date_time_local

    @property
    def card_acceptor_terminal_id(self):
        """
        Gets the card_acceptor_terminal_id of this DecisionInquirypostPayload.
        The terminal ID of the card acceptor

        :return: The card_acceptor_terminal_id of this DecisionInquirypostPayload.
        :rtype: str
        """
        return self._card_acceptor_terminal_id

    @card_acceptor_terminal_id.setter
    def card_acceptor_terminal_id(self, card_acceptor_terminal_id):
        """
        Sets the card_acceptor_terminal_id of this DecisionInquirypostPayload.
        The terminal ID of the card acceptor

        :param card_acceptor_terminal_id: The card_acceptor_terminal_id of this DecisionInquirypostPayload.
        :type: str
        """

        self._card_acceptor_terminal_id = card_acceptor_terminal_id

    @property
    def retrieval_reference_number(self):
        """
        Gets the retrieval_reference_number of this DecisionInquirypostPayload.
        The retrieval reference number assigned by the card acceptor, must be at least 1 and max of 72 characters alphanumeric

        :return: The retrieval_reference_number of this DecisionInquirypostPayload.
        :rtype: str
        """
        return self._retrieval_reference_number

    @retrieval_reference_number.setter
    def retrieval_reference_number(self, retrieval_reference_number):
        """
        Sets the retrieval_reference_number of this DecisionInquirypostPayload.
        The retrieval reference number assigned by the card acceptor, must be at least 1 and max of 72 characters alphanumeric

        :param retrieval_reference_number: The retrieval_reference_number of this DecisionInquirypostPayload.
        :type: str
        """
        if retrieval_reference_number is None:
            raise ValueError("Invalid value for `retrieval_reference_number`, must not be `None`")

        self._retrieval_reference_number = retrieval_reference_number

    @property
    def date_time_local(self):
        """
        Gets the date_time_local of this DecisionInquirypostPayload.
        The date and time the transaction originated in the format: mmddhhmms

        :return: The date_time_local of this DecisionInquirypostPayload.
        :rtype: str
        """
        return self._date_time_local

    @date_time_local.setter
    def date_time_local(self, date_time_local):
        """
        Sets the date_time_local of this DecisionInquirypostPayload.
        The date and time the transaction originated in the format: mmddhhmms

        :param date_time_local: The date_time_local of this DecisionInquirypostPayload.
        :type: str
        """

        self._date_time_local = date_time_local

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DecisionInquirypostPayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

# ----------------------------------------------------------------------------------------------------------------------
# © Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
# FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------