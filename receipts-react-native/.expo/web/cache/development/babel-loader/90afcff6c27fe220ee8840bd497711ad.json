{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/DeleteReceipt.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity, TouchableHighlight } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport constants, { getFormattedDate } from \"../common/constants\";\n\nvar DeleteReceipt = function DeleteReceipt(props) {\n  useEffect(function () {}, []);\n\n  function deletePhoto() {\n    deletePhotoAsync();\n    props.deleteReceiptSelected();\n    props.navigation.navigate(\"Receipts\");\n  }\n\n  function deletePhotoAsync() {\n    var request_body;\n    return _regeneratorRuntime.async(function deletePhotoAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            request_body = JSON.stringify(Object.keys(props.selectedItems));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(constants.ngrokHost + 'receipt/delete', {\n              method: 'POST',\n              body: request_body\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Press to Confirm\",\n    onPress: deletePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\n\nfunction mapStateToProps(state) {\n  return {\n    selectedItems: state.ReceiptSelectorReducer.selectedItems\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteReceiptSelected: function deleteReceiptSelected() {\n      return dispatch({\n        type: \"DELETE_RECEIPT_SELECTED\"\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteReceipt);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/DeleteReceipt.js"],"names":["React","useEffect","useState","TouchableOpacity","TouchableHighlight","connect","constants","getFormattedDate","DeleteReceipt","props","deletePhoto","deletePhotoAsync","deleteReceiptSelected","navigation","navigate","request_body","JSON","stringify","Object","keys","selectedItems","fetch","ngrokHost","method","body","justifyContent","flex","alignItems","styles","StyleSheet","create","mapStateToProps","state","ReceiptSelectorReducer","mapDispatchToProps","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,8BAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,IAAoBC,gBAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAG3BR,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,WAASS,WAAT,GAAuB;AACnBC,IAAAA,gBAAgB;AAChBF,IAAAA,KAAK,CAACG,qBAAN;AACAH,IAAAA,KAAK,CAACI,UAAN,CAAiBC,QAAjB,CAA0B,UAA1B;AACH;;AAED,WAAeH,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQI,YAAAA,YAFR,GAEuBC,IAAI,CAACC,SAAL,CACfC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,aAAlB,CADe,CAFvB;AAAA;AAAA,6CAMUC,KAAK,CAACf,SAAS,CAACgB,SAAV,GAAsB,gBAAvB,EAAyC;AAChDC,cAAAA,MAAM,EAAE,MADwC;AAEhDC,cAAAA,IAAI,EAAET;AAF0C,aAAzC,CANf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,cAAc,EAAE,QAAlB;AAA4BC,MAAAA,IAAI,EAAE,CAAlC;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAiC,IAAA,OAAO,EAAEjB,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA9BD;;AAgCA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHZ,IAAAA,aAAa,EAAEY,KAAK,CAACC,sBAAN,CAA6Bb;AADzC,GAAP;AAGH;;AAED,SAASc,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHvB,IAAAA,qBAAqB,EAAE;AAAA,aAAMuB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AADpB,GAAP;AAGH;;AAED,eAAe/B,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,aAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, Button, ActivityIndicator, Image } from \"react-native\";\nimport { TouchableOpacity, TouchableHighlight } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport constants, { getFormattedDate } from '../common/constants'\n\nconst DeleteReceipt = props => {\n\n\n    useEffect(() => {\n    }, []);\n\n    function deletePhoto() {\n        deletePhotoAsync()\n        props.deleteReceiptSelected()\n        props.navigation.navigate(\"Receipts\")\n    }\n\n    async function deletePhotoAsync() {\n\n        var request_body = JSON.stringify(\n            Object.keys(props.selectedItems)\n        )\n\n        await fetch(constants.ngrokHost + 'receipt/delete', {\n            method: 'POST',\n            body: request_body\n        })\n    }\n\n\n    return (\n        <View style={{ justifyContent: \"center\", flex: 1, alignItems: \"center\" }}>\n            <Button title=\"Press to Confirm\" onPress={deletePhoto}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n});\n\n\nfunction mapStateToProps(state) {\n    return {\n        selectedItems: state.ReceiptSelectorReducer.selectedItems\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        deleteReceiptSelected: () => dispatch({ type: \"DELETE_RECEIPT_SELECTED\" })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteReceipt)"]},"metadata":{},"sourceType":"module"}