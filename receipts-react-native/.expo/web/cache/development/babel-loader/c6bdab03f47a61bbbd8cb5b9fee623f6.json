{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/node_modules/react-native-animate-number/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Timer from 'react-timer-mixin';\nvar HALF_RAD = Math.PI / 2;\n\nvar AnimateNumber = function (_Component) {\n  _inherits(AnimateNumber, _Component);\n\n  var _super = _createSuper(AnimateNumber);\n\n  function AnimateNumber(props) {\n    var _this;\n\n    _classCallCheck(this, AnimateNumber);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: 0,\n      displayValue: 0\n    };\n    _this.dirty = false;\n    _this.startFrom = 0;\n    _this.endWith = 0;\n    return _this;\n  }\n\n  _createClass(AnimateNumber, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startFrom = this.state.value;\n      this.endWith = this.props.value;\n      this.dirty = true;\n      this.startAnimate();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (this.props.value !== nextProps.value) {\n        this.startFrom = this.props.value;\n        this.endWith = nextProps.value;\n        this.dirty = true;\n        this.startAnimate();\n        return;\n      }\n\n      if (!this.dirty) {\n        return;\n      }\n\n      if (this.direction === true) {\n        if (parseFloat(this.state.value) <= parseFloat(this.props.value)) {\n          this.startAnimate();\n        }\n      } else if (this.direction === false) {\n        if (parseFloat(this.state.value) >= parseFloat(this.props.value)) {\n          this.startAnimate();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }), this.state.displayValue);\n    }\n  }, {\n    key: \"startAnimate\",\n    value: function startAnimate() {\n      var _this2 = this;\n\n      var progress = this.getAnimationProgress();\n      Timer.setTimeout(function () {\n        var value = (_this2.endWith - _this2.startFrom) / _this2.props.steps;\n        if (_this2.props.countBy) value = Math.sign(value) * Math.abs(_this2.props.countBy);\n        var total = parseFloat(_this2.state.value) + parseFloat(value);\n        _this2.direction = value > 0;\n\n        if ((_this2.direction ^ total <= _this2.endWith) === 1) {\n          _this2.dirty = false;\n          total = _this2.endWith;\n\n          _this2.props.onFinish(total, _this2.props.formatter(total));\n        }\n\n        if (_this2.props.onProgress) _this2.props.onProgress(_this2.state.value, total);\n\n        _this2.setState({\n          value: total,\n          displayValue: _this2.props.formatter(total)\n        });\n      }, this.getTimingFunction(this.props.interval, progress));\n    }\n  }, {\n    key: \"getAnimationProgress\",\n    value: function getAnimationProgress() {\n      return (this.state.value - this.startFrom) / (this.endWith - this.startFrom);\n    }\n  }, {\n    key: \"getTimingFunction\",\n    value: function getTimingFunction(interval, progress) {\n      if (typeof this.props.timing === 'string') {\n        var fn = AnimateNumber.TimingFunctions[this.props.timing];\n        return fn(interval, progress);\n      } else if (typeof this.props.timing === 'function') return this.props.timing(interval, progress);else return AnimateNumber.TimingFunctions['linear'](interval, progress);\n    }\n  }]);\n\n  return AnimateNumber;\n}(Component);\n\nAnimateNumber.defaultProps = {\n  interval: 14,\n  timing: 'linear',\n  steps: 45,\n  value: 0,\n  formatter: function formatter(val) {\n    return val;\n  },\n  onFinish: function onFinish() {}\n};\nAnimateNumber.TimingFunctions = {\n  linear: function linear(interval, progress) {\n    return interval;\n  },\n  easeOut: function easeOut(interval, progress) {\n    return interval * Math.sin(HALF_RAD * progress) * 5;\n  },\n  easeIn: function easeIn(interval, progress) {\n    return interval * Math.sin(HALF_RAD - HALF_RAD * progress) * 5;\n  }\n};\nexport { AnimateNumber as default };","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/node_modules/react-native-animate-number/index.js"],"names":["React","Component","Timer","HALF_RAD","Math","PI","AnimateNumber","props","state","value","displayValue","dirty","startFrom","endWith","startAnimate","nextProps","nextState","direction","parseFloat","progress","getAnimationProgress","setTimeout","steps","countBy","sign","abs","total","onFinish","formatter","onProgress","setState","getTimingFunction","interval","timing","fn","TimingFunctions","defaultProps","val","linear","easeOut","sin","easeIn"],"mappings":"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","sourcesContent":["/**\n * @author wkh237\n * @version 0.1.1\n */\n\n// @flow\n\nimport React, { Component } from 'react';\nimport {\n  Text,\n  View\n} from 'react-native';\nimport Timer from 'react-timer-mixin';\n\nconst HALF_RAD = Math.PI/2\n\nexport default class AnimateNumber extends Component {\n\n  props : {\n    countBy? : ?number,\n    interval? : ?number,\n    steps? : ?number,\n    value : number,\n    timing : 'linear' | 'easeOut' | 'easeIn' | () => number,\n    formatter : () => {},\n    onProgress : () => {},\n    onFinish : () => {}\n  };\n\n  static defaultProps = {\n    interval : 14,\n    timing : 'linear',\n    steps : 45,\n    value : 0,\n    formatter : (val) => val,\n    onFinish : () => {}\n  };\n\n  static TimingFunctions = {\n\n    linear : (interval:number, progress:number):number => {\n      return interval\n    },\n\n    easeOut : (interval:number, progress:number):number => {\n      return interval * Math.sin(HALF_RAD*progress) * 5\n    },\n\n    easeIn : (interval:number, progress:number):number => {\n      return interval * Math.sin((HALF_RAD - HALF_RAD*progress)) * 5\n    },\n\n  };\n\n  state : {\n    value? : ?number,\n    displayValue? : ?number\n  };\n\n  /**\n   * Animation direction, true means positive, false means negative.\n   * @type {bool}\n   */\n  direction : bool;\n  /**\n   * Start value of last animation.\n   * @type {number}\n   */\n  startFrom : number;\n  /**\n  * End value of last animation.\n  * @type {number}\n   */\n  endWith : number;\n\n  constructor(props:any) {\n    super(props);\n    // default values of state and non-state variables\n    this.state = {\n      value : 0,\n      displayValue : 0\n    }\n    this.dirty = false;\n    this.startFrom = 0;\n    this.endWith = 0;\n  }\n\n  componentDidMount() {\n    this.startFrom = this.state.value\n    this.endWith = this.props.value\n    this.dirty = true\n    this.startAnimate()\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n\n    // check if start an animation\n    if(this.props.value !== nextProps.value) {\n      this.startFrom = this.props.value\n      this.endWith = nextProps.value\n      this.dirty = true\n      this.startAnimate()\n      return\n    }\n    // Check if iterate animation frame\n    if(!this.dirty) {\n      return\n    }\n    if (this.direction === true) {\n      if(parseFloat(this.state.value) <= parseFloat(this.props.value)) {\n        this.startAnimate();\n      }\n    }\n    else if(this.direction === false){\n      if (parseFloat(this.state.value) >= parseFloat(this.props.value)) {\n        this.startAnimate();\n      }\n    }\n\n  }\n\n  render() {\n    return (\n      <Text {...this.props}>\n        {this.state.displayValue}\n      </Text>)\n  }\n\n  startAnimate() {\n\n    let progress = this.getAnimationProgress()\n\n    Timer.setTimeout(() => {\n\n      let value = (this.endWith - this.startFrom)/this.props.steps\n      if(this.props.countBy)\n        value = Math.sign(value)*Math.abs(this.props.countBy)\n      let total = parseFloat(this.state.value) + parseFloat(value)\n\n      this.direction = (value > 0)\n      // animation terminate conditions\n      if (((this.direction) ^ (total <= this.endWith)) === 1) {\n        this.dirty = false\n        total = this.endWith\n        this.props.onFinish(total, this.props.formatter(total))\n      }\n\n      if(this.props.onProgress)\n        this.props.onProgress(this.state.value, total)\n\n      this.setState({\n        value : total,\n        displayValue : this.props.formatter(total)\n      })\n\n    }, this.getTimingFunction(this.props.interval, progress))\n\n  }\n\n  getAnimationProgress():number {\n    return (this.state.value - this.startFrom) / (this.endWith - this.startFrom)\n  }\n\n  getTimingFunction(interval:number, progress:number) {\n    if(typeof this.props.timing === 'string') {\n      let fn = AnimateNumber.TimingFunctions[this.props.timing]\n      return fn(interval, progress)\n    } else if(typeof this.props.timing === 'function')\n      return this.props.timing(interval, progress)\n    else\n      return AnimateNumber.TimingFunctions['linear'](interval, progress)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}