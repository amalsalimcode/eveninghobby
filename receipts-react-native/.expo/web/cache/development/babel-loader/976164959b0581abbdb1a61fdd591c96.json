{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport function isBarEnabled(enabledBars, curBarIdx) {\n  var all_disabled = true;\n\n  for (var idx = 0; idx < enabledBars.length; idx++) {\n    if (enabledBars[idx]) {\n      all_disabled = false;\n      break;\n    }\n  }\n\n  if (all_disabled) {\n    return true;\n  }\n\n  if (enabledBars[curBarIdx]) {\n    return true;\n  }\n\n  return false;\n}\nexport function isAnyAccountPressed(enabledAccounts) {\n  for (account in enabledAccounts) {\n    if (enabledAccounts[account]) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function isAccountEnabled(enabledAccounts, accountId) {\n  var all_disabled = true;\n\n  for (account in enabledAccounts) {\n    if (enabledAccounts[account]) {\n      all_disabled = false;\n      break;\n    }\n  }\n\n  if (all_disabled) {\n    return true;\n  }\n\n  if (!accountId) {\n    return all_disabled;\n  }\n\n  var enabled = accountId in enabledAccounts ? enabledAccounts[accountId] : false;\n  return enabled;\n}\nexport function sleep(milliseconds) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, milliseconds);\n  });\n}\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\nexport function getStartOfWeek(arg) {\n  var d = arg == undefined ? new Date() : arg;\n  var day = d.getDay();\n  var days_to_subtract = day == 6 ? 0 : day + 1;\n  var diff = d.getDate() - days_to_subtract;\n  var dt = new Date(d.setDate(diff));\n  return dt.toString();\n}","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/utils.js"],"names":["useEffect","useRef","isBarEnabled","enabledBars","curBarIdx","all_disabled","idx","length","isAnyAccountPressed","enabledAccounts","account","isAccountEnabled","accountId","enabled","sleep","milliseconds","Promise","resolve","setTimeout","usePrevious","value","ref","current","getStartOfWeek","arg","d","undefined","Date","day","getDay","days_to_subtract","diff","getDate","dt","setDate","toString"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAO,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,SAAnC,EAA8C;AAMjD,MAAIC,YAAY,GAAG,IAAnB;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAW,CAACI,MAApC,EAA4CD,GAAG,EAA/C,EAAmD;AAC/C,QAAIH,WAAW,CAACG,GAAD,CAAf,EAAsB;AAClBD,MAAAA,YAAY,GAAG,KAAf;AACA;AACH;AACJ;;AAGD,MAAIA,YAAJ,EAAkB;AACd,WAAO,IAAP;AACH;;AAED,MAAIF,WAAW,CAACC,SAAD,CAAf,EAA4B;AACxB,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAED,OAAO,SAASI,mBAAT,CAA6BC,eAA7B,EAA8C;AACjD,OAAKC,OAAL,IAAgBD,eAAhB,EAAiC;AAC7B,QAAIA,eAAe,CAACC,OAAD,CAAnB,EAA8B;AAC1B,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BF,eAA1B,EAA2CG,SAA3C,EAAsD;AAGzD,MAAIP,YAAY,GAAG,IAAnB;;AACA,OAAKK,OAAL,IAAgBD,eAAhB,EAAiC;AAC7B,QAAIA,eAAe,CAACC,OAAD,CAAnB,EAA8B;AAC1BL,MAAAA,YAAY,GAAG,KAAf;AACA;AACH;AACJ;;AAGD,MAAIA,YAAJ,EAAkB;AACd,WAAO,IAAP;AACH;;AAED,MAAI,CAACO,SAAL,EAAgB;AACZ,WAAOP,YAAP;AACH;;AAGD,MAAIQ,OAAO,GAAGD,SAAS,IAAIH,eAAb,GAA+BA,eAAe,CAACG,SAAD,CAA9C,GAA4D,KAA1E;AAEA,SAAOC,OAAP;AACH;AAED,OAAO,SAASC,KAAT,CAAeC,YAAf,EAA6B;AAGhC,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,YAAV,CAAd;AAAA,GAAnB,CAAP;AACH;AAED,OAAO,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,MAAMC,GAAG,GAAGpB,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZqB,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACH,GAFQ,CAAT;AAGA,SAAOC,GAAG,CAACC,OAAX;AACH;AAED,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAEhC,MAAIC,CAAC,GAAGD,GAAG,IAAIE,SAAP,GAAmB,IAAIC,IAAJ,EAAnB,GAAgCH,GAAxC;AACA,MAAII,GAAG,GAAGH,CAAC,CAACI,MAAF,EAAV;AAGA,MAAIC,gBAAgB,GAAGF,GAAG,IAAI,CAAP,GAAW,CAAX,GAAeA,GAAG,GAAG,CAA5C;AACA,MAAIG,IAAI,GAAGN,CAAC,CAACO,OAAF,KAAcF,gBAAzB;AACA,MAAIG,EAAE,GAAG,IAAIN,IAAJ,CAASF,CAAC,CAACS,OAAF,CAAUH,IAAV,CAAT,CAAT;AAEA,SAAOE,EAAE,CAACE,QAAH,EAAP;AACH","sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function isBarEnabled(enabledBars, curBarIdx) {\n    /*\n     * if all bars is unclicked, then show all data\n     * otherwise, show data for only those bars that are clicked\n     */\n\n    var all_disabled = true\n    for (let idx = 0; idx < enabledBars.length; idx++) {\n        if (enabledBars[idx]) {\n            all_disabled = false\n            break\n        }\n    }\n\n    // none of the bars are enabled\n    if (all_disabled) {\n        return true\n    }\n\n    if (enabledBars[curBarIdx]) {\n        return true\n    }\n\n    return false\n}\n\nexport function isAnyAccountPressed(enabledAccounts) {\n    for (account in enabledAccounts) {\n        if (enabledAccounts[account]) {\n            return true\n        }\n    }\n    return false\n}\n\nexport function isAccountEnabled(enabledAccounts, accountId) {\n\n    /* check if any accountId is enabled */\n    var all_disabled = true\n    for (account in enabledAccounts) {\n        if (enabledAccounts[account]) {\n            all_disabled = false\n            break\n        }\n    }\n\n    /* if atleast no accountId is enabled, then we show data */\n    if (all_disabled) {\n        return true\n    }\n\n    if (!accountId) {\n        return all_disabled\n    }\n\n    /* accountId has never been clicked, so its enabled */\n    var enabled = accountId in enabledAccounts ? enabledAccounts[accountId] : false\n\n    return enabled\n}\n\nexport function sleep(milliseconds) {\n    /* now anywhere in your code, you can say sleep(5000)\n       and it will sleep for 5 seconds */\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function getStartOfWeek(arg) {\n\n    var d = arg == undefined ? new Date() : arg\n    var day = d.getDay()\n\n    // if current day is Saturday (6), don't subtract\n    var days_to_subtract = day == 6 ? 0 : day + 1\n    var diff = d.getDate() - days_to_subtract;\n    var dt = new Date(d.setDate(diff));\n\n    return dt.toString()\n}\n"]},"metadata":{},"sourceType":"module"}