{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/EmailInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { commonStyles, theme } from \"../common/styles\";\n\nvar EmailInput = function EmailInput(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorWidth = _useState2[0],\n      setErrorWidth = _useState2[1];\n\n  var _useState3 = useState(props.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tmpEmail = _useState4[0],\n      setTmpEmail = _useState4[1];\n\n  useEffect(function () {}, []);\n\n  var validateEmailHandler = function validateEmailHandler() {\n    console.log(\"validating email\");\n\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(tmpEmail)) {\n      props.setEmail(tmpEmail);\n      setErrorWidth(0);\n    } else {\n      props.setEmail(\"\");\n      setErrorWidth(2);\n    }\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputView), {}, {\n      flexDirection: \"row\",\n      paddingLeft: 15,\n      borderColor: \"red\",\n      borderWidth: errorWidth\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      marginRight: 10,\n      marginTop: 15,\n      height: 20,\n      width: 20\n    },\n    source: require(\"../../../assets/email.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputText), {}, {\n      flex: 1\n    }),\n    placeholder: \"Email\",\n    placeholderTextColor: theme.placeholderText,\n    onChangeText: function onChangeText(entered_text) {\n      setTmpEmail(entered_text);\n    },\n    value: props.name,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    onBlur: validateEmailHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.PersonalInformationReducer.email\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setEmail: function setEmail(email) {\n      dispatch({\n        type: 'SET_EMAIL',\n        new_email: email\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailInput);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/EmailInput.js"],"names":["React","useState","useEffect","connect","commonStyles","theme","EmailInput","props","errorWidth","setErrorWidth","email","tmpEmail","setTmpEmail","validateEmailHandler","console","log","test","setEmail","inputView","flexDirection","paddingLeft","borderColor","borderWidth","marginRight","marginTop","height","width","require","inputText","flex","placeholderText","entered_text","name","mapStateToProps","state","PersonalInformationReducer","mapDispatchToProps","dispatch","type","new_email"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,YAAT,EAAuBC,KAAvB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,kBAEYN,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,MAEjBO,UAFiB;AAAA,MAELC,aAFK;;AAAA,mBAGQR,QAAQ,CAACM,KAAK,CAACG,KAAP,CAHhB;AAAA;AAAA,MAGjBC,QAHiB;AAAA,MAGPC,WAHO;;AASxBV,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAI,gDAAgDC,IAAhD,CAAqDL,QAArD,CAAJ,EAAoE;AAChEJ,MAAAA,KAAK,CAACU,QAAN,CAAeN,QAAf;AACAF,MAAAA,aAAa,CAAC,CAAD,CAAb;AACH,KAHD,MAGO;AACHF,MAAAA,KAAK,CAACU,QAAN,CAAe,EAAf;AACAR,MAAAA,aAAa,CAAC,CAAD,CAAb;AACH;AACJ,GATD;;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCACJL,YAAY,CAACc,SADT;AACoBC,MAAAA,aAAa,EAAE,KADnC;AAEPC,MAAAA,WAAW,EAAE,EAFN;AAEUC,MAAAA,WAAW,EAAE,KAFvB;AAE8BC,MAAAA,WAAW,EAAEd;AAF3C,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEe,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,SAAS,EAAE,EAA9B;AAAkCC,MAAAA,MAAM,EAAE,EAA1C;AAA8CC,MAAAA,KAAK,EAAE;AAArD,KAAd;AAAyE,IAAA,MAAM,EAAEC,OAAO,6BAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,SAAD;AACI,IAAA,KAAK,kCAAOvB,YAAY,CAACwB,SAApB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,MADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,oBAAoB,EAAExB,KAAK,CAACyB,eAHhC;AAII,IAAA,YAAY,EAAE,sBAACC,YAAD,EAAkB;AAAEnB,MAAAA,WAAW,CAACmB,YAAD,CAAX;AAA2B,KAJjE;AAKI,IAAA,KAAK,EAAExB,KAAK,CAACyB,IALjB;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,cAAc,EAAC,MAPnB;AAQI,IAAA,MAAM,EAAEnB,oBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAsBH,CA7CD;;AA+CA,SAASoB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHxB,IAAAA,KAAK,EAAEwB,KAAK,CAACC,0BAAN,CAAiCzB;AADrC,GAAP;AAGH;;AAED,SAAS0B,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHpB,IAAAA,QAAQ,EAAE,kBAACP,KAAD,EAAW;AAAE2B,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,SAAS,EAAE7B;AAAhC,OAAD,CAAR;AAAmD;AADvE,GAAP;AAGH;;AAED,eAAeP,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,UAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { View, TextInput, Image } from 'react-native';\nimport { commonStyles, theme } from '../common/styles'\n\n\nconst EmailInput = props => {\n\n    const [errorWidth, setErrorWidth] = useState('')\n    const [tmpEmail, setTmpEmail] = useState(props.email)\n\n    /*\n     * If the user clicked next and then previous,\n     * show them the data that was filled in\n     */\n    useEffect(() => {\n    }, []);\n\n    const validateEmailHandler = () => {\n        console.log(\"validating email\")\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(tmpEmail)) {\n            props.setEmail(tmpEmail)\n            setErrorWidth(0)\n        } else {\n            props.setEmail(\"\")\n            setErrorWidth(2)\n        }\n    }\n\n    return (\n        <View style={{\n            ...commonStyles.inputView, flexDirection: \"row\",\n            paddingLeft: 15, borderColor: \"red\", borderWidth: errorWidth\n        }} >\n\n            <Image style={{ marginRight: 10, marginTop: 15, height: 20, width: 20 }} source={require('../../../assets/email.png')} />\n\n            <TextInput\n                style={{ ...commonStyles.inputText, flex: 1 }}\n                placeholder=\"Email\"\n                placeholderTextColor={theme.placeholderText}\n                onChangeText={(entered_text) => { setTmpEmail(entered_text) }}\n                value={props.name}\n                autoCorrect={false}\n                autoCapitalize='none'\n                onBlur={validateEmailHandler}\n            />\n\n        </View>\n    )\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        email: state.PersonalInformationReducer.email,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setEmail: (email) => { dispatch({ type: 'SET_EMAIL', new_email: email }) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailInput)"]},"metadata":{},"sourceType":"module"}