{"ast":null,"code":"var _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/SignIn.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Button, Input, Icon } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport EmailInput from \"./EmailInput\";\nimport PassCodeInput from \"./PassCodeInput\";\nimport LoginButton from \"./LoginButton\";\nimport GradientBackground from \"../common/GradientBackground\";\n\nvar SignIn = function SignIn(props) {\n  var next_button_pressed = function next_button_pressed() {\n    if (props.email && props.code) {\n      props.navigation.navigate(\"Home\");\n    } else {\n      console.log(\"not all fields are filled in\");\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(GradientBackground, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: {\n      alignItems: \"center\",\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 200,\n      width: 200\n    },\n    source: require(\"../../../assets/dolphin.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(EmailInput, {\n    defaultEmail: props.defaultEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(PassCodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(LoginButton, {\n    btnMsg: \"SignIn\",\n    pressAction: next_button_pressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      paddingBottom: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.PersonalInformationReducer.name,\n    number: state.PersonalInformationReducer.number,\n    code: state.PersonalInformationReducer.code,\n    email: state.PersonalInformationReducer.email\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setName: function setName(entered_name) {\n      dispatch({\n        type: 'SET_NAME',\n        new_name: entered_name\n      });\n    },\n    setCode: function setCode(entered_code) {\n      dispatch({\n        type: 'SET_CODE',\n        new_code: entered_code\n      });\n    },\n    setScreen: function setScreen(data) {\n      return dispatch({\n        type: \"SET_SCREEN\",\n        data: data\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/SignIn.js"],"names":["Button","Input","Icon","connect","React","useEffect","useState","EmailInput","PassCodeInput","LoginButton","GradientBackground","SignIn","props","next_button_pressed","email","code","navigation","navigate","console","log","Keyboard","dismiss","Platform","OS","alignItems","flex","justifyContent","height","width","require","defaultEmail","paddingBottom","mapStateToProps","state","name","PersonalInformationReducer","number","mapDispatchToProps","dispatch","setName","entered_name","type","new_name","setCode","entered_code","new_code","setScreen","data"],"mappings":"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","sourcesContent":["import { View, TextInput, StyleSheet, KeyboardAvoidingView, Platform, Keyboard, TouchableWithoutFeedback } from 'react-native'\nimport { Button, Input, Icon } from 'react-native-elements';\nimport { connect } from 'react-redux'\nimport React, { useEffect, useState } from \"react\";\nimport { Image } from \"react-native\"\nimport EmailInput from './EmailInput';\nimport PassCodeInput from './PassCodeInput';\nimport LoginButton from './LoginButton';\nimport GradientBackground from '../common/GradientBackground';\n\n\nconst SignIn = props => {\n\n  const next_button_pressed = () => {\n\n    if (props.email && props.code) {\n      props.navigation.navigate(\"Home\")\n    } else {\n      console.log(\"not all fields are filled in\")\n    }\n  }\n\n  return (\n    <>\n      <GradientBackground>\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <KeyboardAvoidingView\n            behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n            style={{ alignItems: \"center\", flex: 1, justifyContent: \"center\" }}>\n\n            <Image style={{ height: 200, width: 200 }} source={require('../../../assets/dolphin.png')} />\n            <EmailInput defaultEmail={props.defaultEmail} />\n            <PassCodeInput />\n            <LoginButton btnMsg=\"SignIn\" pressAction={next_button_pressed} />\n\n          </KeyboardAvoidingView >\n        </TouchableWithoutFeedback>\n        <View style={{ paddingBottom: 150 }} />\n      </GradientBackground>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.PersonalInformationReducer.name,\n    number: state.PersonalInformationReducer.number,\n    code: state.PersonalInformationReducer.code,\n    email: state.PersonalInformationReducer.email,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setName: (entered_name) => { dispatch({ type: 'SET_NAME', new_name: entered_name }) },\n    setCode: (entered_code) => { dispatch({ type: 'SET_CODE', new_code: entered_code }) },\n    setScreen: (data) => dispatch({ type: \"SET_SCREEN\", data: data })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}