{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/Transactions.js\";\nimport BarGraph from \"./graph/BarGraph\";\nimport { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport BarSummary from \"./summary/BarSummary\";\nimport constants from \"../common/constants\";\nimport BarDetails from \"./details/BarDetails\";\nimport GradientBackground from \"../common/GradientBackground\";\nimport { theme } from \"../common/styles\";\nimport TransactionsBottomToolbar from \"./TransactionsBottomToolbar\";\n\nvar Transactions = function Transactions(props) {\n  useEffect(function () {\n    var dt = new Date(props.fullDate);\n    var month = dt.getMonth() + 1;\n    var date_str = dt.getFullYear() + \"-\" + month + \"-\" + dt.getDate();\n    var email = props.email ? props.email : \"amal.salim@gmail.com\";\n    var request_body = JSON.stringify({\n      \"email\": email,\n      \"start_date\": date_str,\n      \"days\": constants.diffDays\n    });\n    fetch('http://127.0.0.1:8000/transaction/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: request_body\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return props.setTransactionData(json);\n    });\n    fetch('http://127.0.0.1:8000/transaction/retrieveAccount', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: request_body\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return props.setAccountInfo(json);\n    });\n  }, [props.fullDate]);\n  return React.createElement(GradientBackground, {\n    colors: [theme.subleSecondary, theme.subtlePrimary],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(BarGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(BarSummary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(BarDetails, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), React.createElement(TransactionsBottomToolbar, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    fullDate: state.TransactionsReducer.meta_data.fullDate,\n    email: state.PersonalInformationReducer.email\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTransactionData: function setTransactionData(transactions) {\n      return dispatch({\n        type: 'SET_TRANSACTION_DATA',\n        transactions: transactions\n      });\n    },\n    setAccountInfo: function setAccountInfo(data) {\n      return dispatch({\n        type: \"SET_ACCOUNT_INFO\",\n        data: data\n      });\n    },\n    changeCurWeek: function changeCurWeek(direction) {\n      return dispatch({\n        type: \"ADD_SUB_CUR_WEEK\",\n        direction: direction\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/Transactions.js"],"names":["BarGraph","connect","React","useEffect","BarSummary","constants","BarDetails","GradientBackground","theme","TransactionsBottomToolbar","Transactions","props","dt","Date","fullDate","month","getMonth","date_str","getFullYear","getDate","email","request_body","JSON","stringify","diffDays","fetch","method","headers","Accept","body","then","response","json","setTransactionData","setAccountInfo","subleSecondary","subtlePrimary","mapStateToProps","state","TransactionsReducer","meta_data","PersonalInformationReducer","mapDispatchToProps","dispatch","transactions","type","data","changeCurWeek","direction"],"mappings":"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","sourcesContent":["/*\n * All transactions to be displayed are setup and retrieved here\n */\n\n'use strict'\n\nimport BarGraph from './graph/BarGraph'\nimport { connect } from 'react-redux'\nimport React, { useEffect } from 'react';\nimport BarSummary from './summary/BarSummary'\nimport constants from '../common/constants';\nimport BarDetails from './details/BarDetails';\nimport GradientBackground from '../common/GradientBackground';\nimport { theme } from '../common/styles';\nimport TransactionsBottomToolbar from './TransactionsBottomToolbar';\n\nconst Transactions = props => {\n\n\n    useEffect(() => {\n\n        // get curr date\n        var dt = new Date(props.fullDate)\n        var month = dt.getMonth() + 1\n        var date_str = dt.getFullYear() + \"-\" + month + \"-\" + dt.getDate()\n        var email = props.email ? props.email : \"amal.salim@gmail.com\"\n\n        var request_body = JSON.stringify({\n            \"email\": email,\n            \"start_date\": date_str,\n            \"days\": constants.diffDays,\n        })\n\n        fetch('http://127.0.0.1:8000/transaction/', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: request_body\n        }).then((response) => response.json())\n            .then((json) => props.setTransactionData(json));\n\n        fetch('http://127.0.0.1:8000/transaction/retrieveAccount', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: request_body\n        }).then((response) => response.json())\n            .then((json) => props.setAccountInfo(json));\n\n    }, [props.fullDate]);\n\n    return (\n        // show loading sign until from backend is received\n        < GradientBackground colors={[theme.subleSecondary, theme.subtlePrimary]} >\n            <BarGraph />\n            <BarSummary />\n            <BarDetails {...props} />\n            <TransactionsBottomToolbar {...props} />\n        </GradientBackground >\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fullDate: state.TransactionsReducer.meta_data.fullDate,\n        email: state.PersonalInformationReducer.email\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setTransactionData: (transactions) => dispatch({\n            type: 'SET_TRANSACTION_DATA',\n            transactions: transactions,\n        }),\n        setAccountInfo: (data) => dispatch({ type: \"SET_ACCOUNT_INFO\", data: data }),\n        changeCurWeek: (direction) => dispatch({ type: \"ADD_SUB_CUR_WEEK\", direction: direction })\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions)"]},"metadata":{},"sourceType":"module"}