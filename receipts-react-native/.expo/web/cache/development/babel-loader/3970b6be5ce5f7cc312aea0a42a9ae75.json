{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport { connect } from 'react-redux';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport React, { useState, useEffect } from 'react';\n\nvar AuthScreen = function AuthScreen(props) {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      curScreen = _useState2[0],\n      setCurScreen = _useState2[1];\n\n  function login() {\n    var email;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"email\"));\n\n          case 2:\n            email = _context.sent;\n\n            if (email) {\n              props.setEmail(email);\n              setCurScreen(0);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    login();\n  }, []);\n\n  function get_current_screen() {\n    switch (curScreen) {\n      case 0:\n        return props.navigation.navigate(\"SignIn\");\n\n      default:\n        return props.navigation.navigate(\"SignUp\");\n    }\n  }\n\n  return React.createElement(React.Fragment, null, get_current_screen());\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setEmail: function setEmail(email) {\n      dispatch({\n        type: 'SET_EMAIL',\n        new_email: email\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthScreen);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/AuthScreen.js"],"names":["SignIn","SignUp","connect","React","useState","useEffect","AuthScreen","props","curScreen","setCurScreen","login","AsyncStorage","getItem","email","setEmail","get_current_screen","navigation","navigate","mapStateToProps","state","mapDispatchToProps","dispatch","type","new_email"],"mappings":";;AAAA,OAAOA,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,kBAEUH,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,MAEjBI,SAFiB;AAAA,MAENC,YAFM;;AAIxB,WAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEsBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFtB;;AAAA;AAEQC,YAAAA,KAFR;;AAGI,gBAAIA,KAAJ,EAAW;AACPN,cAAAA,KAAK,CAACO,QAAN,CAAeD,KAAf;AACAJ,cAAAA,YAAY,CAAC,CAAD,CAAZ;AACH;;AANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAJ,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASK,kBAAT,GAA8B;AAC1B,YAAQP,SAAR;AACI,WAAK,CAAL;AACI,eAAQD,KAAK,CAACS,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CAAR;;AACJ;AACI,eAAQV,KAAK,CAACS,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CAAR;AAJR;AAMH;;AAED,SACI,0CACKF,kBAAkB,EADvB,CADJ;AAKH,CA/BD;;AAiCA,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO,EAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHP,IAAAA,QAAQ,EAAE,kBAACD,KAAD,EAAW;AAAEQ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,SAAS,EAAEV;AAAhC,OAAD,CAAR;AAAkD;AADtE,GAAP;AAGH;;AAED,eAAeX,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport { connect } from 'react-redux'\nimport { AsyncStorage } from 'react-native';\nimport React, { useState, useEffect } from 'react';\n\n\nconst AuthScreen = props => {\n\n    const [curScreen, setCurScreen] = useState(1)\n\n    async function login() {\n        // await AsyncStorage.setItem(\"email\", \"amal.salim@gmail.com\")\n        var email = await AsyncStorage.getItem(\"email\")\n        if (email) {\n            props.setEmail(email)\n            setCurScreen(0)\n        }\n    }\n\n    useEffect(() => {\n        login()\n    }, [])\n\n    function get_current_screen() {\n        switch (curScreen) {\n            case 0:\n                return (props.navigation.navigate(\"SignIn\"))\n            default:\n                return (props.navigation.navigate(\"SignUp\"))\n        }\n    }\n\n    return (\n        <>\n            {get_current_screen()}\n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        // curScreen: state.ScreenReducer.curScreen,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setEmail: (email) => { dispatch({ type: 'SET_EMAIL', new_email: email}) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthScreen)"]},"metadata":{},"sourceType":"module"}