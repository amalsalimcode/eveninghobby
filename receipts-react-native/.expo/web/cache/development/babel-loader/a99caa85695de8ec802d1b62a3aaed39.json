{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Device from 'expo-device';\nvar constants = {\n  diffDays: 7,\n  windowWidth: Dimensions.get('window').width,\n  windowHeight: Dimensions.get('window').height,\n  ngrokHost: \"https://405156c0e4c0.ngrok.io/\",\n  model: Device.modelName\n};\nexport function getTopToolbarHeight() {\n  return hasNotch() ? 100 : constants.windowHeight * 0.1;\n}\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport function hasNotch() {\n  var conditions = [\"iPhone 11\", \"iPhone X\"];\n  var hasNotch = conditions.some(function (el) {\n    return constants.model.includes(el);\n  });\n  return hasNotch;\n}\nexport function getFormattedDate(dt, skipYear) {\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var dt_str = dt.getDate() + \" \" + monthNames[dt.getMonth()];\n\n  if (!skipYear) {\n    dt_str += \" \" + dt.getFullYear();\n  }\n\n  return dt_str;\n}\nexport default constants;","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/common/constants.js"],"names":["Device","constants","diffDays","windowWidth","Dimensions","get","width","windowHeight","height","ngrokHost","model","modelName","getTopToolbarHeight","hasNotch","uuidv4","replace","c","r","Math","random","v","toString","conditions","some","el","includes","getFormattedDate","dt","skipYear","monthNames","dt_str","getDate","getMonth","getFullYear"],"mappings":";AACA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAIA,IAAIC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,CADI;AAEdC,EAAAA,WAAW,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFxB;AAGdC,EAAAA,YAAY,EAAEH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAHzB;AAIdC,EAAAA,SAAS,EAAE,gCAJG;AAKdC,EAAAA,KAAK,EAAEV,MAAM,CAACW;AALA,CAAhB;AAQA,OAAO,SAASC,mBAAT,GAA+B;AACpC,SAAOC,QAAQ,KAAK,GAAL,GAAWZ,SAAS,CAACM,YAAV,GAAyB,GAAnD;AACD;AAED,OAAO,SAASO,MAAT,GAAkB;AACvB,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AAC1E,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,QAAgCC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA9D;AACA,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD,GAHM,CAAP;AAID;AAED,OAAO,SAASR,QAAT,GAAoB;AACzB,MAAIS,UAAU,GAAG,CAAC,WAAD,EAAc,UAAd,CAAjB;AACA,MAAIT,QAAQ,GAAGS,UAAU,CAACC,IAAX,CAAgB,UAAAC,EAAE;AAAA,WAAIvB,SAAS,CAACS,KAAV,CAAgBe,QAAhB,CAAyBD,EAAzB,CAAJ;AAAA,GAAlB,CAAf;AACA,SAAOX,QAAP;AACD;AAED,OAAO,SAASa,gBAAT,CAA0BC,EAA1B,EAA8BC,QAA9B,EAAwC;AAE7C,MAAIC,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACf,MADe,EACP,QADO,EACG,WADH,EACgB,SADhB,EAC2B,UAD3B,EACuC,UADvC,CAAjB;AAGA,MAAIC,MAAM,GAAGH,EAAE,CAACI,OAAH,KAAe,GAAf,GAAqBF,UAAU,CAACF,EAAE,CAACK,QAAH,EAAD,CAA5C;;AACA,MAAI,CAACJ,QAAL,EAAe;AACbE,IAAAA,MAAM,IAAI,MAAMH,EAAE,CAACM,WAAH,EAAhB;AACD;;AAED,SAAOH,MAAP;AAED;AAED,eAAe7B,SAAf","sourcesContent":["import { Dimensions } from \"react-native\";\nimport * as Device from 'expo-device';\n\n\n\nlet constants = {\n  diffDays: 7,\n  windowWidth: Dimensions.get('window').width,\n  windowHeight: Dimensions.get('window').height,\n  ngrokHost: \"https://405156c0e4c0.ngrok.io/\",\n  model: Device.modelName,\n}\n\nexport function getTopToolbarHeight() {\n  return hasNotch() ? 100 : constants.windowHeight * 0.1\n}\n\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function hasNotch() {\n  var conditions = [\"iPhone 11\", \"iPhone X\"]\n  var hasNotch = conditions.some(el => constants.model.includes(el));\n  return hasNotch\n}\n\nexport function getFormattedDate(dt, skipYear) {\n\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n  var dt_str = dt.getDate() + \" \" + monthNames[dt.getMonth()]\n  if (!skipYear) {\n    dt_str += \" \" + dt.getFullYear()\n  }\n\n  return dt_str\n\n}\n\nexport default constants"]},"metadata":{},"sourceType":"module"}