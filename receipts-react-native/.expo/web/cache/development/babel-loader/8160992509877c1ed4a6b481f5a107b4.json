{"ast":null,"code":"var _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/TopToolbar.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport constants, { hasNotch, getTopToolbarHeight } from \"../common/constants\";\nimport { theme } from \"../common/styles\";\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\nimport SingleDataTemplate from \"../transactions/details/SingleDataTemplate\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport { AntDesign, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport GradientBackground from \"../common/GradientBackground\";\n\nvar TopToolbar = function TopToolbar(props) {\n  useEffect(function () {}, []);\n  var iconSize = constants.windowHeight * 0.05;\n\n  var getDone = function getDone() {\n    if (props.done) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 0,\n          padding: 5,\n          marginRight: 5,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          props.done();\n          props.navigation.popToTop();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"done\",\n        size: iconSize * 1.1,\n        color: \"black\",\n        style: {\n          marginRight: 0,\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  var getDelete = function getDelete() {\n    if (props.delete) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 0,\n          padding: 5,\n          marginRight: 5,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          props.navigation.popToTop();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"trash-can-outline\",\n        size: iconSize * 0.9,\n        color: \"black\",\n        style: {\n          marginRight: 0,\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: getTopToolbarHeight(),\n      width: constants.windowWidth,\n      backgroundColor: theme.subtlePrimary,\n      flexDirection: \"column-reverse\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderWidth: 0\n    },\n    onPress: function onPress() {\n      props.navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowleft\",\n    size: iconSize,\n    color: \"black\",\n    style: {\n      marginLeft: 10,\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), getDelete(), getDone()));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopToolbar);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/TopToolbar.js"],"names":["React","useEffect","useState","constants","hasNotch","getTopToolbarHeight","theme","Camera","ImagePicker","SingleDataTemplate","TouchableOpacity","connect","AntDesign","MaterialIcons","MaterialCommunityIcons","GradientBackground","TopToolbar","props","iconSize","windowHeight","getDone","done","borderWidth","padding","marginRight","marginBottom","navigation","popToTop","getDelete","delete","height","width","windowWidth","backgroundColor","subtlePrimary","flexDirection","justifyContent","alignItems","marginTop","goBack","marginLeft","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, Button, ActivityIndicator, Image } from \"react-native\";\nimport constants, { hasNotch, getTopToolbarHeight } from \"../common/constants\";\nimport { theme } from '../common/styles';\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\nimport SingleDataTemplate from \"../transactions/details/SingleDataTemplate\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport { AntDesign, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport GradientBackground from \"../common/GradientBackground\";\n\nconst TopToolbar = props => {\n\n    useEffect(() => {\n    }, []);\n\n    var iconSize = constants.windowHeight * 0.05\n\n    const getDone = () => {\n        if (props.done) {\n            //send data to backend\n            return (\n                <TouchableOpacity style={{ borderWidth: 0, padding: 5, marginRight: 5, marginBottom: 5 }} onPress={() => { props.done(); props.navigation.popToTop() }}>\n                    <MaterialIcons name=\"done\" size={iconSize * 1.1} color=\"black\" style={{ marginRight: 0, marginBottom: 0 }} />\n                </TouchableOpacity>\n            )\n        }\n    }\n\n    const getDelete = () => {\n        if (props.delete) {\n            return (\n                <TouchableOpacity style={{ borderWidth: 0, padding: 5, marginRight: 5, marginBottom: 5 }} onPress={() => { props.navigation.popToTop() }}>\n                    <MaterialCommunityIcons name=\"trash-can-outline\" size={iconSize * 0.9} color=\"black\" style={{ marginRight: 0, marginBottom: 0 }} />\n                </TouchableOpacity>\n            )\n        }\n    }\n\n    return (\n        <View style={{ height: getTopToolbarHeight(), width: constants.windowWidth, backgroundColor: theme.subtlePrimary, flexDirection: \"column-reverse\" }} >\n            <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: 15}}>\n                <TouchableOpacity style={{ borderWidth: 0 }} onPress={() => { props.navigation.goBack() }}>\n                    <AntDesign name=\"arrowleft\" size={iconSize} color=\"black\" style={{ marginLeft: 10, marginBottom: 0 }} />\n                </TouchableOpacity>\n                {getDelete()}\n                {getDone()}\n            </View>\n        </View>\n    )\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopToolbar)\n"]},"metadata":{},"sourceType":"module"}