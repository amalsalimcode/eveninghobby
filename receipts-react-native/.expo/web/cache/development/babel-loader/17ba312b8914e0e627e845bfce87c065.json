{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/ReceiptView.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport constants from \"../common/constants\";\nimport GradientBackground from \"../common/GradientBackground\";\nimport { theme } from \"../common/styles\";\nimport PinchZoomView from 'react-native-pinch-zoom-view';\nimport ImageZoom from \"react-native-image-pan-zoom\";\nimport TopToolbar from \"./TopToolbar\";\n\nvar ReceiptView = function ReceiptView(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      newImg = _useState2[0],\n      setNewImg = _useState2[1];\n\n  useEffect(function () {\n    var request_body = JSON.stringify({\n      \"uuid\": props.route.params[\"uuid\"]\n    });\n    fetch(constants.ngrokHost + 'receipt/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: request_body\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setNewImg(json[\"image\"]);\n    });\n  }, []);\n\n  if (!newImg) {\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: {\n        justifyContent: \"center\",\n        alignContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, React.createElement(ActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(TopToolbar, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), React.createElement(GradientBackground, {\n      colors: [theme.subleSecondary, theme.subtlePrimary],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, React.createElement(ImageZoom, {\n      cropWidth: Dimensions.get('window').width,\n      cropHeight: Dimensions.get('window').height,\n      imageWidth: Dimensions.get('window').width,\n      imageHeight: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: Dimensions.get('window').width,\n        height: 500\n      },\n      source: {\n        uri: newImg\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    })))));\n  }\n};\n\nexport default ReceiptView;","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/ReceiptView.js"],"names":["React","useEffect","useState","constants","GradientBackground","theme","PinchZoomView","ImageZoom","TopToolbar","ReceiptView","props","newImg","setNewImg","request_body","JSON","stringify","route","params","fetch","ngrokHost","method","headers","Accept","body","then","response","json","justifyContent","alignContent","subleSecondary","subtlePrimary","flex","alignItems","Dimensions","get","width","height","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,kBAAP;AACA,SAASC,KAAT;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,kBAEGR,QAAQ,CAAC,IAAD,CAFX;AAAA;AAAA,MAElBS,MAFkB;AAAA,MAEVC,SAFU;;AAIzBX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIY,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC9B,cAAQL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmB,MAAnB;AADsB,KAAf,CAAnB;AAIAC,IAAAA,KAAK,CAACf,SAAS,CAACgB,SAAV,GAAsB,UAAvB,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OAF2B;AAMpCC,MAAAA,IAAI,EAAEV;AAN8B,KAAnC,CAAL,CAOGW,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQKF,IARL,CAQU,UAACE,IAAD,EAAU;AAAEd,MAAAA,SAAS,CAACc,IAAI,CAAC,OAAD,CAAL,CAAT;AAA0B,KARhD;AAUH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAI,CAACf,MAAL,EAAa;AACT,WACI,0CACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEgB,QAAAA,cAAc,EAAE,QAAlB;AAA4BC,QAAAA,YAAY,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH,GARD,MAQO;AACH,WACI,0CACI,oBAAC,UAAD,eAAgBlB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI,oBAAE,kBAAF;AAAqB,MAAA,MAAM,EAAE,CAACL,KAAK,CAACwB,cAAP,EAAuBxB,KAAK,CAACyB,aAA7B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWJ,QAAAA,cAAc,EAAE,QAA3B;AAAqCK,QAAAA,UAAU,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA/C;AACI,MAAA,UAAU,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,MADzC;AAEI,MAAA,UAAU,EAAEH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFzC;AAGI,MAAA,WAAW,EAAE,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAlC;AAAyCC,QAAAA,MAAM,EAAE;AAAjD,OAAd;AACI,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE1B;AAAP,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CAFJ,CADJ;AAgBH;AACJ,CA/CD;;AAiDA,eAAeF,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Dimensions, Text, Button, ActivityIndicator, Image } from \"react-native\";\nimport constants from \"../common/constants\";\nimport GradientBackground from \"../common/GradientBackground\";\nimport { theme } from \"../common/styles\";\nimport PinchZoomView from 'react-native-pinch-zoom-view';\nimport ImageZoom from \"react-native-image-pan-zoom\";\nimport TopToolbar from \"./TopToolbar\";\n\n\nconst ReceiptView = props => {\n\n    const [newImg, setNewImg] = useState(null);\n\n    useEffect(() => {\n        var request_body = JSON.stringify({\n            \"uuid\": props.route.params[\"uuid\"]\n        })\n\n        fetch(constants.ngrokHost + 'receipt/', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: request_body\n        }).then((response) => response.json())\n            .then((json) => { setNewImg(json[\"image\"]) })\n\n    }, []);\n\n    if (!newImg) {\n        return (\n            <>\n                <View style={{ justifyContent: \"center\", alignContent: \"center\" }}>\n                    <ActivityIndicator />\n                </View>\n            </>\n        )\n    } else {\n        return (\n            <>\n                <TopToolbar {...props} />\n                < GradientBackground colors={[theme.subleSecondary, theme.subtlePrimary]} >\n                    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\"}}>\n                        <ImageZoom cropWidth={Dimensions.get('window').width}\n                            cropHeight={Dimensions.get('window').height}\n                            imageWidth={Dimensions.get('window').width}\n                            imageHeight={500}>\n                            <Image style={{ width: Dimensions.get('window').width, height: 500 }}\n                                source={{ uri: newImg }} />\n                        </ImageZoom>\n                    </View>\n                </ GradientBackground>\n            </>\n        );\n    }\n}\n\nexport default ReceiptView\n"]},"metadata":{},"sourceType":"module"}