{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/NameInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Input } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { commonStyles, theme } from \"../common/styles\";\n\nvar NameInput = function NameInput(props) {\n  useEffect(function () {}, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputView), {}, {\n      flexDirection: \"row\",\n      paddingLeft: 13,\n      borderColor: \"red\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      marginRight: 7,\n      marginTop: 13,\n      height: 25,\n      width: 25\n    },\n    source: require(\"../../../assets/user.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputText), {}, {\n      flex: 1\n    }),\n    placeholder: \"Name\",\n    autoCapitalize: \"words\",\n    onChangeText: props.setName,\n    value: props.name,\n    placeholderTextColor: theme.placeholderText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.PersonalInformationReducer.name\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setName: function setName(name) {\n      dispatch({\n        type: 'SET_NAME',\n        new_name: name\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameInput);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/NameInput.js"],"names":["React","useState","useEffect","Input","connect","commonStyles","theme","NameInput","props","inputView","flexDirection","paddingLeft","borderColor","marginRight","marginTop","height","width","require","inputText","flex","setName","name","placeholderText","mapStateToProps","state","PersonalInformationReducer","mapDispatchToProps","dispatch","type","new_name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,YAAT,EAAuBC,KAAvB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAMvBN,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;AAGA,SACI,0CACI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCACJG,YAAY,CAACI,SADT;AACoBC,MAAAA,aAAa,EAAE,KADnC;AAEPC,MAAAA,WAAW,EAAE,EAFN;AAEUC,MAAAA,WAAW,EAAE;AAFvB,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,CAAf;AAAkBC,MAAAA,SAAS,EAAE,EAA7B;AAAiCC,MAAAA,MAAM,EAAE,EAAzC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAd;AAAwE,IAAA,MAAM,EAAEC,OAAO,4BAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,SAAD;AACI,IAAA,KAAK,kCAAOZ,YAAY,CAACa,SAApB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,MADT;AAEI,IAAA,WAAW,EAAC,MAFhB;AAGI,IAAA,cAAc,EAAC,OAHnB;AAII,IAAA,YAAY,EAAEX,KAAK,CAACY,OAJxB;AAKI,IAAA,KAAK,EAAEZ,KAAK,CAACa,IALjB;AAMI,IAAA,oBAAoB,EAAEf,KAAK,CAACgB,eANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAsBH,CA/BD;;AAiCA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHH,IAAAA,IAAI,EAAEG,KAAK,CAACC,0BAAN,CAAiCJ;AADpC,GAAP;AAGH;;AAED,SAASK,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHP,IAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU;AAAEM,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,QAAQ,EAAER;AAA9B,OAAD,CAAR;AAAgD;AADlE,GAAP;AAGH;;AAED,eAAejB,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input } from 'react-native-elements'\nimport { connect } from 'react-redux'\nimport { View, TextInput, Image } from 'react-native';\nimport { commonStyles, theme } from '../common/styles'\n\n\nconst NameInput = props => {\n\n    /*\n     * If the user clicked next and then previous,\n     * show them the data that was filled in\n     */\n    useEffect(() => {\n    }, []);\n\n    return (\n        <>\n            <View style={{\n                ...commonStyles.inputView, flexDirection: \"row\",\n                paddingLeft: 13, borderColor: \"red\"\n            }} >\n\n                <Image style={{ marginRight: 7, marginTop: 13, height: 25, width: 25 }} source={require('../../../assets/user.png')} />\n\n                <TextInput\n                    style={{ ...commonStyles.inputText, flex: 1 }}\n                    placeholder=\"Name\"\n                    autoCapitalize='words'\n                    onChangeText={props.setName}\n                    value={props.name}\n                    placeholderTextColor={theme.placeholderText}\n                />\n\n            </View>\n        </>\n    )\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        name: state.PersonalInformationReducer.name\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setName: (name) => { dispatch({ type: 'SET_NAME', new_name: name }) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameInput)"]},"metadata":{},"sourceType":"module"}