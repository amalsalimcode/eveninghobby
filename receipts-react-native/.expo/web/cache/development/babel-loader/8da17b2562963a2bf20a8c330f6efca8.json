{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/summary/BarSummary.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { connect } from 'react-redux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport constants, { getFormattedDate } from \"../../common/constants\";\nimport { usePrevious } from \"../utils\";\nimport ChangeDate from \"./ChangeDate\";\n\nvar BarSummary = function BarSummary(props) {\n  var enabledBars = props.enabledBars;\n  var prevBarValues = usePrevious({\n    enabledBars: enabledBars\n  });\n  var enabledAccounts = props.enabledAccounts;\n  var prevAccountValues = usePrevious({\n    enabledAccounts: enabledAccounts\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDatePicker = _useState2[0],\n      setShowDatePicker = _useState2[1];\n\n  useEffect(function () {\n    var barsChanged = false;\n\n    if (prevBarValues) {\n      barsChanged = JSON.stringify(prevBarValues.enabledBars) != JSON.stringify(props.enabledBars);\n    }\n\n    var accountsChanged = false;\n\n    if (prevAccountValues) {\n      accountsChanged = JSON.stringify(prevAccountValues.enabledAccounts) != JSON.stringify(props.enabledAccounts);\n    }\n\n    if (barsChanged || accountsChanged) {\n      props.setAllTotalExpensesCache(props.serverData, props.enabledBars, props.enabledAccounts);\n      return;\n    }\n\n    var dt = new Date(props.fullDate);\n    var month = dt.getMonth() + 1;\n    var date_str = dt.getFullYear() + \"-\" + month + \"-\" + dt.getDate();\n    var request_body = {\n      \"email\": \"amal.salim@gmail.com\",\n      \"start_date\": date_str,\n      \"days\": constants.diffDays\n    };\n    fetch('http://127.0.0.1:8000/transaction/totalSpent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request_body)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return props.setAllTotalExpenses(json, props.enabledBars);\n    });\n  }, [props.enabledBars, props.enabledAccounts]);\n  var dt_str = getFormattedDate(new Date(props.fullDate));\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setShowDatePicker(true);\n    },\n    style: _objectSpread(_objectSpread({}, styles.square), {}, {\n      justifyContent: \"center\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 10\n    },\n    shadowOffset: {\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.4,\n    shadowOffset: {\n      height: 2,\n      width: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"flex-start\",\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Week Start: \")), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"    \", dt_str))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"flex-start\",\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Expense This Week: \")), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"    $\", props.totalSpent, \" \"))), React.createElement(ChangeDate, {\n    visible: showDatePicker,\n    setVisible: setShowDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  square: {\n    alignSelf: \"center\",\n    borderColor: \"black\",\n    borderWidth: 0.7,\n    borderRadius: 10,\n    shadowColor: \"black\",\n    width: \"95%\",\n    shadowOpacity: 0.1,\n    shadowRadius: 40,\n    marginBottom: 10,\n    marginTop: 20,\n    height: 48\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    fullDate: state.TransactionsReducer.meta_data.fullDate,\n    totalSpent: state.BarSummaryReducer.totalSpent,\n    enabledBars: state.BarGraphReducer.enabledBars,\n    serverData: state.BarSummaryReducer.serverData,\n    enabledAccounts: state.EnabledAccountsReducer.enabledAccounts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    showSettings: function showSettings() {\n      return dispatch({\n        type: \"TOGGLE_SETTINGS_VISIBILITY\"\n      });\n    },\n    setAllTotalExpenses: function setAllTotalExpenses(data, enabledBars) {\n      return dispatch({\n        type: \"SET_ALL_TOTAL_EXPENSES\",\n        data: data,\n        enabledBars: enabledBars\n      });\n    },\n    setAllTotalExpensesCache: function setAllTotalExpensesCache(data, enabledBars, enabledAccounts) {\n      return dispatch({\n        type: \"SET_ALL_TOTAL_EXPENSES_CACHE\",\n        data: data,\n        enabledBars: enabledBars,\n        enabledAccounts: enabledAccounts\n      });\n    },\n    clearAccountsClicked: function clearAccountsClicked() {\n      return dispatch({\n        type: \"CLEAR_ACCOUNT_SELECTION\"\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarSummary);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/summary/BarSummary.js"],"names":["React","useEffect","useState","connect","TouchableOpacity","constants","getFormattedDate","usePrevious","ChangeDate","BarSummary","props","enabledBars","prevBarValues","enabledAccounts","prevAccountValues","showDatePicker","setShowDatePicker","barsChanged","JSON","stringify","accountsChanged","setAllTotalExpensesCache","serverData","dt","Date","fullDate","month","getMonth","date_str","getFullYear","getDate","request_body","diffDays","fetch","method","headers","Accept","body","then","response","json","setAllTotalExpenses","dt_str","styles","square","justifyContent","marginLeft","height","width","flexDirection","flex","alignItems","totalSpent","StyleSheet","create","alignSelf","borderColor","borderWidth","borderRadius","shadowColor","shadowOpacity","shadowRadius","marginBottom","marginTop","mapStateToProps","state","TransactionsReducer","meta_data","BarSummaryReducer","BarGraphReducer","EnabledAccountsReducer","mapDispatchToProps","dispatch","showSettings","type","data","clearAccountsClicked"],"mappings":"AAAA;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,SAAP,IAAoBC,gBAApB;AACA,SAASC,WAAT;AACA,OAAOC,UAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAExB,MAAMC,WAAW,GAAGD,KAAK,CAACC,WAA1B;AACA,MAAMC,aAAa,GAAGL,WAAW,CAAC;AAAEI,IAAAA,WAAW,EAAXA;AAAF,GAAD,CAAjC;AAEA,MAAME,eAAe,GAAGH,KAAK,CAACG,eAA9B;AACA,MAAMC,iBAAiB,GAAGP,WAAW,CAAC;AAAEM,IAAAA,eAAe,EAAfA;AAAF,GAAD,CAArC;;AANwB,kBAQoBX,QAAQ,CAAC,KAAD,CAR5B;AAAA;AAAA,MAQjBa,cARiB;AAAA,MAQDC,iBARC;;AAUxBf,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAIgB,WAAW,GAAG,KAAlB;;AACA,QAAIL,aAAJ,EAAmB;AACfK,MAAAA,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeP,aAAa,CAACD,WAA7B,KAA8CO,IAAI,CAACC,SAAL,CAAeT,KAAK,CAACC,WAArB,CAA5D;AACH;;AAED,QAAIS,eAAe,GAAG,KAAtB;;AACA,QAAIN,iBAAJ,EAAuB;AACnBM,MAAAA,eAAe,GAAGF,IAAI,CAACC,SAAL,CAAeL,iBAAiB,CAACD,eAAjC,KAAsDK,IAAI,CAACC,SAAL,CAAeT,KAAK,CAACG,eAArB,CAAxE;AACH;;AAED,QAAII,WAAW,IAAIG,eAAnB,EAAoC;AAChCV,MAAAA,KAAK,CAACW,wBAAN,CAA+BX,KAAK,CAACY,UAArC,EAAiDZ,KAAK,CAACC,WAAvD,EAAoED,KAAK,CAACG,eAA1E;AACA;AACH;;AAGD,QAAIU,EAAE,GAAG,IAAIC,IAAJ,CAASd,KAAK,CAACe,QAAf,CAAT;AACA,QAAIC,KAAK,GAAGH,EAAE,CAACI,QAAH,KAAgB,CAA5B;AACA,QAAIC,QAAQ,GAAGL,EAAE,CAACM,WAAH,KAAmB,GAAnB,GAAyBH,KAAzB,GAAiC,GAAjC,GAAuCH,EAAE,CAACO,OAAH,EAAtD;AAEA,QAAIC,YAAY,GAAG;AACf,eAAS,sBADM;AAEf,oBAAcH,QAFC;AAGf,cAAQvB,SAAS,CAAC2B;AAHH,KAAnB;AAMAC,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OAFyC;AAMlDC,MAAAA,IAAI,EAAEnB,IAAI,CAACC,SAAL,CAAeY,YAAf;AAN4C,KAAjD,CAAL,CAOGO,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQKF,IARL,CAQU,UAACE,IAAD;AAAA,aAAU9B,KAAK,CAAC+B,mBAAN,CAA0BD,IAA1B,EAAgC9B,KAAK,CAACC,WAAtC,CAAV;AAAA,KARV;AAUH,GAtCQ,EAsCN,CAACD,KAAK,CAACC,WAAP,EAAoBD,KAAK,CAACG,eAA1B,CAtCM,CAAT;AAwCA,MAAI6B,MAAM,GAAGpC,gBAAgB,CAAC,IAAIkB,IAAJ,CAASd,KAAK,CAACe,QAAf,CAAD,CAA7B;AAEA,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM;AAACT,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAwB,KAA1D;AAA4D,IAAA,KAAK,kCAAO2B,MAAM,CAACC,MAAd;AAAsBC,MAAAA,cAAc,EAAE;AAAtC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAiC,IAAA,YAAY,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA/C;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,aAAa,EAAE,GAFnB;AAGI,IAAA,YAAY,EAAE;AAAEA,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,YAAvB;AAAqCL,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAWR,MAAX,CADJ,CAJJ,CALJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,YAAvB;AAAqCL,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYxC,KAAK,CAAC0C,UAAlB,MADJ,CAJJ,CAbJ,EAqBI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAErC,cAArB;AAAqC,IAAA,UAAU,EAAEC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADJ,CADJ;AA2BH,CA/ED;;AAiFA,IAAM2B,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,MAAM,EAAE;AACJW,IAAAA,SAAS,EAAE,QADP;AAEJC,IAAAA,WAAW,EAAE,OAFT;AAGJC,IAAAA,WAAW,EAAE,GAHT;AAIJC,IAAAA,YAAY,EAAE,EAJV;AAKJC,IAAAA,WAAW,EAAE,OALT;AAMJX,IAAAA,KAAK,EAAE,KANH;AAOJY,IAAAA,aAAa,EAAE,GAPX;AAQJC,IAAAA,YAAY,EAAE,EARV;AASJC,IAAAA,YAAY,EAAE,EATV;AAUJC,IAAAA,SAAS,EAAE,EAVP;AAWJhB,IAAAA,MAAM,EAAE;AAXJ;AADqB,CAAlB,CAAf;;AAiBA,SAASiB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHxC,IAAAA,QAAQ,EAAEwC,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,CAAoC1C,QAD3C;AAEH2B,IAAAA,UAAU,EAAEa,KAAK,CAACG,iBAAN,CAAwBhB,UAFjC;AAGHzC,IAAAA,WAAW,EAAEsD,KAAK,CAACI,eAAN,CAAsB1D,WAHhC;AAIHW,IAAAA,UAAU,EAAE2C,KAAK,CAACG,iBAAN,CAAwB9C,UAJjC;AAKHT,IAAAA,eAAe,EAAEoD,KAAK,CAACK,sBAAN,CAA6BzD;AAL3C,GAAP;AAOH;;AAED,SAAS0D,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,YAAY,EAAE;AAAA,aAAMD,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KADX;AAEHjC,IAAAA,mBAAmB,EAAE,6BAACkC,IAAD,EAAOhE,WAAP;AAAA,aAAuB6D,QAAQ,CAAC;AACjDE,QAAAA,IAAI,EAAE,wBAD2C;AACjBC,QAAAA,IAAI,EAAEA,IADW;AAEjDhE,QAAAA,WAAW,EAAEA;AAFoC,OAAD,CAA/B;AAAA,KAFlB;AAMHU,IAAAA,wBAAwB,EAAE,kCAACsD,IAAD,EAAOhE,WAAP,EAAoBE,eAApB;AAAA,aAAwC2D,QAAQ,CAAC;AACvEE,QAAAA,IAAI,EAAE,8BADiE;AACjCC,QAAAA,IAAI,EAAEA,IAD2B;AAEvEhE,QAAAA,WAAW,EAAEA,WAF0D;AAE7CE,QAAAA,eAAe,EAAEA;AAF4B,OAAD,CAAhD;AAAA,KANvB;AAUH+D,IAAAA,oBAAoB,EAAE;AAAA,aAAMJ,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AAVnB,GAAP;AAYH;;AAED,eAAevE,OAAO,CAAC6D,eAAD,EAAkBO,kBAAlB,CAAP,CAA6C9D,UAA7C,CAAf","sourcesContent":["'use strict'\n\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, Text, Animated } from 'react-native'\nimport { connect } from 'react-redux'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport constants, { getFormattedDate } from '../../common/constants';\nimport { usePrevious } from '../utils';\nimport ChangeDate from './ChangeDate';\n\n\nconst BarSummary = props => {\n\n    const enabledBars = props.enabledBars\n    const prevBarValues = usePrevious({ enabledBars })\n\n    const enabledAccounts = props.enabledAccounts\n    const prevAccountValues = usePrevious({ enabledAccounts })\n\n    const [showDatePicker, setShowDatePicker] = useState(false);\n\n    useEffect(() => {\n\n        var barsChanged = false\n        if (prevBarValues) {\n            barsChanged = JSON.stringify(prevBarValues.enabledBars) != (JSON.stringify(props.enabledBars))\n        }\n\n        var accountsChanged = false\n        if (prevAccountValues) {\n            accountsChanged = JSON.stringify(prevAccountValues.enabledAccounts) != (JSON.stringify(props.enabledAccounts))\n        }\n\n        if (barsChanged || accountsChanged) {\n            props.setAllTotalExpensesCache(props.serverData, props.enabledBars, props.enabledAccounts)\n            return\n        }\n\n        // get curr date\n        var dt = new Date(props.fullDate)\n        var month = dt.getMonth() + 1\n        var date_str = dt.getFullYear() + \"-\" + month + \"-\" + dt.getDate()\n\n        var request_body = {\n            \"email\": \"amal.salim@gmail.com\",\n            \"start_date\": date_str,\n            \"days\": constants.diffDays,\n        }\n\n        fetch('http://127.0.0.1:8000/transaction/totalSpent', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request_body)\n        }).then((response) => response.json())\n            .then((json) => props.setAllTotalExpenses(json, props.enabledBars));\n\n    }, [props.enabledBars, props.enabledAccounts]);\n\n    var dt_str = getFormattedDate(new Date(props.fullDate))\n\n    return (\n        <TouchableOpacity onPress={() => {setShowDatePicker(true)}} style={{ ...styles.square, justifyContent: \"center\" }}>\n            <View style={{ marginLeft: 10 }} shadowOffset={{ height: 10 }}\n                shadowColor='black'\n                shadowOpacity={0.4}\n                shadowOffset={{ height: 2, width: 2 }}\n            >\n                <View style={{ flexDirection: \"row\" }}>\n                    <View style={{ flex: 1, alignItems: \"flex-start\", marginLeft: 35 }}>\n                        <Text>Week Start: </Text>\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Text>    {dt_str}</Text>\n                    </View>\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                    <View style={{ flex: 1, alignItems: \"flex-start\", marginLeft: 35 }}>\n                        <Text>Expense This Week: </Text>\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Text>    ${props.totalSpent} </Text>\n                    </View>\n                </View>\n                <ChangeDate visible={showDatePicker} setVisible={setShowDatePicker}/>\n            </View>\n        </TouchableOpacity>\n    )\n}\n\nconst styles = StyleSheet.create({\n    square: {\n        alignSelf: \"center\",\n        borderColor: \"black\",\n        borderWidth: 0.7,\n        borderRadius: 10,\n        shadowColor: \"black\",\n        width: \"95%\",\n        shadowOpacity: 0.1,\n        shadowRadius: 40,\n        marginBottom: 10,\n        marginTop: 20,\n        height: 48,\n    },\n});\n\n\nfunction mapStateToProps(state) {\n    return {\n        fullDate: state.TransactionsReducer.meta_data.fullDate,\n        totalSpent: state.BarSummaryReducer.totalSpent,\n        enabledBars: state.BarGraphReducer.enabledBars,\n        serverData: state.BarSummaryReducer.serverData,\n        enabledAccounts: state.EnabledAccountsReducer.enabledAccounts\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        showSettings: () => dispatch({ type: \"TOGGLE_SETTINGS_VISIBILITY\" }),\n        setAllTotalExpenses: (data, enabledBars) => dispatch({\n            type: \"SET_ALL_TOTAL_EXPENSES\", data: data,\n            enabledBars: enabledBars\n        }),\n        setAllTotalExpensesCache: (data, enabledBars, enabledAccounts) => dispatch({\n            type: \"SET_ALL_TOTAL_EXPENSES_CACHE\", data: data,\n            enabledBars: enabledBars, enabledAccounts: enabledAccounts\n        }),\n        clearAccountsClicked: () => dispatch({ type: \"CLEAR_ACCOUNT_SELECTION\" })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarSummary)"]},"metadata":{},"sourceType":"module"}