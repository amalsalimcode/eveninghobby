{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/UploadReceipt.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport constants from \"../common/constants\";\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\n\nvar UploadReceipt = function UploadReceipt(props) {\n  useEffect(function () {}, []);\n\n  var pickImage = function pickImage() {\n    var result, localUri, filename, match, type, formData;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            localUri = photo[\"uri\"];\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formData = new FormData();\n            formData.append('image', {\n              uri: image ? image : localUri,\n              name: 'test.jpg',\n              type: type\n            });\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8000/account/receipt', {\n              method: 'POST',\n              body: formData,\n              headers: {\n                'content-type': 'multipart/form-data'\n              }\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, pickImage);\n};\n\nexport default UploadReceipt;","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/UploadReceipt.js"],"names":["React","useEffect","useState","constants","Camera","ImagePicker","UploadReceipt","props","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setImage","uri","localUri","photo","filename","split","pop","match","exec","type","formData","FormData","append","image","name","fetch","method","body","headers","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,SAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAE3BN,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,MAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKH,WAAW,CAACI,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAEL,WAAW,CAACM,gBAAZ,CAA6BC,GADU;AAEnDC,cAAAA,aAAa,EAAE,IAFoC;AAGnDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,cAAAA,OAAO,EAAE;AAJ0C,aAApC,CADL;;AAAA;AACVC,YAAAA,MADU;;AAQd,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACnBC,cAAAA,QAAQ,CAACF,MAAM,CAACG,GAAR,CAAR;AACH;;AAGGC,YAAAA,QAbU,GAaCC,KAAK,CAAC,KAAD,CAbN;AAcVC,YAAAA,QAdU,GAcCF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAdD;AAiBVC,YAAAA,KAjBU,GAiBF,WAAWC,IAAX,CAAgBJ,QAAhB,CAjBE;AAkBVK,YAAAA,IAlBU,GAkBHF,KAAK,cAAYA,KAAK,CAAC,CAAD,CAAjB,UAlBF;AAqBVG,YAAAA,QArBU,GAqBC,IAAIC,QAAJ,EArBD;AAuBdD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB;AAAEX,cAAAA,GAAG,EAAEY,KAAK,GAAGA,KAAH,GAAWX,QAAvB;AAAiCY,cAAAA,IAAI,EAAE,UAAvC;AAAmDL,cAAAA,IAAI,EAAEA;AAAzD,aAAzB;AAvBc;AAAA,6CAyBDM,KAAK,CAAC,uCAAD,EAA0C;AACxDC,cAAAA,MAAM,EAAE,MADgD;AAExDC,cAAAA,IAAI,EAAEP,QAFkD;AAGxDQ,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AAH+C,aAA1C,CAzBJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAoCA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE,QAAlB;AAA4BC,MAAAA,UAAU,EAAE;AAAxC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,SADL,CADJ;AAKH,CA9CD;;AAgDA,eAAeF,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, Button, ActivityIndicator, Image } from \"react-native\";\nimport constants from \"../common/constants\";\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\n\nconst UploadReceipt = props => {\n\n    useEffect(() => {\n    }, []);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n\n        // ImagePicker saves the taken photo to disk and returns a local URI to it\n        let localUri = photo[\"uri\"];\n        let filename = localUri.split('/').pop();\n\n        // Infer the type of the image\n        let match = /\\.(\\w+)$/.exec(filename);\n        let type = match ? `image/${match[1]}` : `image`;\n\n        // Upload the image using the fetch and FormData APIs\n        let formData = new FormData();\n        // Assume \"photo\" is the name of the form field the server expects\n        formData.append('image', { uri: image ? image : localUri, name: 'test.jpg', type: type });\n\n        return await fetch('http://127.0.0.1:8000/account/receipt', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'content-type': 'multipart/form-data',\n            },\n        });\n\n    };\n\n\n    return (\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            {pickImage}\n        </View>\n    );\n}\n\nexport default UploadReceipt\n"]},"metadata":{},"sourceType":"module"}