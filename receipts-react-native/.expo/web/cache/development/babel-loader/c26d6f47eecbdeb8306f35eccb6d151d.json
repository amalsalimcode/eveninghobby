{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/details/SingleAccount.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SingleDataTemplate from \"./SingleDataTemplate\";\nimport { connect } from 'react-redux';\nexport var bankMapping = {\n  \"Wells Fargo\": require(\"../../../../assets/bank_logos/wells.png\"),\n  \"Bank of America\": require(\"../../../../assets/bank_logos/boa.png\"),\n  \"Citi\": require(\"../../../../assets/bank_logos/citi.jpg\"),\n  \"US Bank\": require(\"../../../../assets/bank_logos/us.png\")\n};\n\nvar SingleAccount = function SingleAccount(props) {\n  useEffect(function () {});\n  var accountId = props.data[\"accountId\"];\n  var expense = props.expensePerAccount[accountId];\n  var expense_rounded = \"$\" + (expense ? Number(expense.toFixed(1)) : expense);\n\n  if (!expense && props.showExpense) {\n    return React.createElement(React.Fragment, null);\n  } else {\n    return React.createElement(SingleDataTemplate, _extends({\n      onClick: function onClick() {\n        props.toggleAccount(props.data.accountId);\n      },\n      initialHeight: 45,\n      expandHeight: 45\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), React.createElement(View, {\n      style: {\n        marginTop: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 35,\n        width: 50,\n        marginRight: 10\n      },\n      source: bankMapping[props.data.institution],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, props.data[\"accountName\"])), props.showExpense ? React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 42\n      }\n    }, expense_rounded) : React.createElement(React.Fragment, null), props.children));\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    bar_data: state.TransactionsReducer.bar_data,\n    meta: state.TransactionsReducer.meta_data,\n    curDate: state.TransactionsReducer.meta_data.fullDate,\n    expensePerAccount: state.BarSummaryReducer.expensePerAccount\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleAccount: function toggleAccount(accountId) {\n      return dispatch({\n        type: \"TOGGLE_ACCOUNT\",\n        accountId: accountId\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleAccount);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/details/SingleAccount.js"],"names":["React","useEffect","useState","SingleDataTemplate","connect","bankMapping","require","SingleAccount","props","accountId","data","expense","expensePerAccount","expense_rounded","Number","toFixed","showExpense","toggleAccount","marginTop","flexDirection","justifyContent","alignItems","height","width","marginRight","institution","children","mapStateToProps","state","bar_data","TransactionsReducer","meta","meta_data","curDate","fullDate","BarSummaryReducer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport SingleDataTemplate from \"./SingleDataTemplate\";\nimport { connect } from 'react-redux'\n\n\nexport const bankMapping = {\n    \"Wells Fargo\": require(\"../../../../assets/bank_logos/wells.png\"),\n    \"Bank of America\": require(\"../../../../assets/bank_logos/boa.png\"),\n    \"Citi\": require(\"../../../../assets/bank_logos/citi.jpg\"),\n    \"US Bank\": require(\"../../../../assets/bank_logos/us.png\")\n}\n\n\n\nconst SingleAccount = props => {\n    useEffect(() => {\n    });\n\n    var accountId = props.data[\"accountId\"]\n    var expense = props.expensePerAccount[accountId]\n\n    var expense_rounded = \"$\" + (expense ? Number((expense).toFixed(1)) : expense)\n\n    if (!expense && props.showExpense) {\n        return (<></>)\n    } else {\n        return (\n            <SingleDataTemplate onClick={() => { props.toggleAccount(props.data.accountId) }} initialHeight={45} expandHeight={45} {...props}>\n                <View style={{ marginTop: 1, flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <View style={{ flexDirection: \"row\", justifyContent: \"flex-start\" }}>\n                        <Image style={{ height: 35, width: 50, marginRight: 10 }} source={bankMapping[props.data.institution]} />\n                        <Text style={{ marginTop: 10 }}>{props.data[\"accountName\"]}</Text>\n                    </View>\n                    {props.showExpense ? <Text>{expense_rounded}</Text>: <></>}\n                    {props.children}\n                </View >\n            </SingleDataTemplate >\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        bar_data: state.TransactionsReducer.bar_data,\n        meta: state.TransactionsReducer.meta_data,\n        curDate: state.TransactionsReducer.meta_data.fullDate,\n        expensePerAccount: state.BarSummaryReducer.expensePerAccount\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAccount: (accountId) => dispatch({ type: \"TOGGLE_ACCOUNT\", accountId: accountId })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleAccount)\n"]},"metadata":{},"sourceType":"module"}