{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/SingleReceipt.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport constants, { getFormattedDate } from \"../common/constants\";\n\nvar SingleReceipt = function SingleReceipt(props) {\n  console.log(\"Im in single receipt\");\n\n  var _useState = useState(0.7),\n      _useState2 = _slicedToArray(_useState, 2),\n      borderWidth = _useState2[0],\n      setBorderWidth = _useState2[1];\n\n  useEffect(function () {}, []);\n\n  function longPressed() {\n    if (borderWidth == 0.7) {\n      setBorderWidth(2);\n      props.incSelectCount(props.value[\"uuid_str\"]);\n    } else {\n      setBorderWidth(0.7);\n      props.decSelectCount(props.value[\"uuid_str\"]);\n    }\n  }\n\n  function shortPressed() {\n    if (props.isSelected) {\n      if (borderWidth == 0.7) {\n        setBorderWidth(2);\n        props.incSelectCount(props.value[\"uuid_str\"]);\n      } else {\n        setBorderWidth(0.7);\n        props.decSelectCount(props.value[\"uuid_str\"]);\n      }\n    } else {\n      props.navigation.navigate('ReceiptView', {\n        'uuid': props.value[\"uuid_str\"]\n      });\n    }\n  }\n\n  var insertDate = function insertDate() {\n    if (props.prev_dt != props.value[\"createdAt_str\"]) {\n      return React.createElement(View, {\n        style: {\n          marginHorizontal: 10,\n          opacity: 0.5,\n          marginTop: 15,\n          marginLeft: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.visit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, getFormattedDate(new Date(props.value[\"createdAt_str\"]), false))));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, insertDate(), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.square), {}, {\n      borderWidth: borderWidth\n    }),\n    onPress: shortPressed,\n    onLongPress: longPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    style: {\n      borderRadius: 2,\n      height: 45,\n      width: 30,\n      marginLeft: 5,\n      marginVertical: 1,\n      resizeMode: \"contain\"\n    },\n    source: {\n      uri: props.value[\"image_fill\"]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, props.value[\"store\"])), React.createElement(Text, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"$\", props.value[\"amount\"]))));\n};\n\nvar styles = StyleSheet.create({\n  square: {\n    alignSelf: \"center\",\n    borderColor: \"#3e424b\",\n    width: \"95%\",\n    marginBottom: 8\n  },\n  textContainer: {\n    borderBottomWidth: 2,\n    marginBottom: 10,\n    width: constants.windowWidth - 50\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    isSelected: state.ReceiptSelectorReducer.isSelected,\n    isDeleted: state.ReceiptSelectorReducer.deletedItems\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    incSelectCount: function incSelectCount(uuid) {\n      return dispatch({\n        type: \"INC_RECEIPT_COUNT\",\n        uuid: uuid\n      });\n    },\n    decSelectCount: function decSelectCount(uuid) {\n      return dispatch({\n        type: \"DEC_RECEIPT_COUNT\",\n        uuid: uuid\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleReceipt);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/SingleReceipt.js"],"names":["React","useEffect","useState","TouchableOpacity","connect","constants","getFormattedDate","SingleReceipt","props","console","log","borderWidth","setBorderWidth","longPressed","incSelectCount","value","decSelectCount","shortPressed","isSelected","navigation","navigate","insertDate","prev_dt","marginHorizontal","opacity","marginTop","marginLeft","styles","textContainer","visit","Date","square","flexDirection","alignItems","justifyContent","marginRight","borderRadius","height","width","marginVertical","resizeMode","uri","StyleSheet","create","alignSelf","borderColor","marginBottom","borderBottomWidth","windowWidth","mapStateToProps","state","ReceiptSelectorReducer","isDeleted","deletedItems","mapDispatchToProps","dispatch","uuid","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, Button, ActivityIndicator, Image } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { connect } from \"react-redux\";\nimport constants, { getFormattedDate } from '../common/constants'\n\nconst SingleReceipt = props => {\n\n    console.log(\"Im in single receipt\")\n\n    const [borderWidth, setBorderWidth] = useState(0.7);\n\n    useEffect(() => {\n    }, []);\n\n    function longPressed() {\n        if (borderWidth == 0.7) {\n            setBorderWidth(2)\n            props.incSelectCount(props.value[\"uuid_str\"])\n        } else {\n            setBorderWidth(0.7)\n            props.decSelectCount(props.value[\"uuid_str\"])\n        }\n    }\n\n    function shortPressed() {\n        if (props.isSelected) {\n            if (borderWidth == 0.7) {\n                setBorderWidth(2)\n                props.incSelectCount(props.value[\"uuid_str\"])\n            } else {\n                setBorderWidth(0.7)\n                props.decSelectCount(props.value[\"uuid_str\"])\n            }\n        } else {\n            props.navigation.navigate('ReceiptView', { 'uuid': props.value[\"uuid_str\"] })\n        }\n    }\n\n    const insertDate = () => {\n        if (props.prev_dt != props.value[\"createdAt_str\"]) {\n            return (\n                <View style={{ marginHorizontal: 10, opacity: 0.5, marginTop: 15, marginLeft: 15 }}>\n                    <View style={styles.textContainer}>\n                        <Text style={styles.visit}>{getFormattedDate(new Date(props.value[\"createdAt_str\"]), false)}</Text>\n                    </View>\n                </View>\n            )\n        }\n    }\n\n    return (\n        <>\n            {insertDate()}\n            <TouchableOpacity style={{ ...styles.square, borderWidth: borderWidth }} onPress={shortPressed} onLongPress={longPressed}>\n                <View style={{ flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", marginRight: 10 }}>\n                    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                        <Image style={{ borderRadius: 2, height: 45, width: 30, marginLeft: 5, marginVertical: 1, resizeMode: \"contain\" }} source={{ uri: props.value[\"image_fill\"] }} />\n                        <Text style={{ marginLeft: 10 }}>{props.value[\"store\"]}</Text>\n                    </View>\n                    <Text style={{}}>${props.value[\"amount\"]}</Text>\n                </View >\n            </TouchableOpacity>\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    square: {\n        alignSelf: \"center\",\n        borderColor: \"#3e424b\",\n        width: \"95%\",\n        marginBottom: 8,\n    },\n    textContainer: {\n        borderBottomWidth: 2,\n        marginBottom: 10,\n        width: constants.windowWidth - 50,\n    },\n});\n\n\nfunction mapStateToProps(state) {\n    return {\n        isSelected: state.ReceiptSelectorReducer.isSelected,\n        isDeleted: state.ReceiptSelectorReducer.deletedItems\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        incSelectCount: (uuid) => dispatch({ type: \"INC_RECEIPT_COUNT\", uuid: uuid }),\n        decSelectCount: (uuid) => dispatch({ type: \"DEC_RECEIPT_COUNT\", uuid: uuid })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleReceipt)\n\n"]},"metadata":{},"sourceType":"module"}