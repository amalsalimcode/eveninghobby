{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/details/managePeople/ManagePeople.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { TouchableWithoutFeedback, ScrollView } from \"react-native-gesture-handler\";\nimport constants, { uuidv4 } from \"../../../common/constants\";\nimport Person from \"./Person\";\nimport ManagePeopleBottomToolbar from \"./ManagePeopleBottomToolbar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RestrictedPerson from \"./RestrictedPerson\";\nimport GradientBackground from \"../../../common/GradientBackground\";\nimport { theme } from \"../../../common/styles\";\n\nvar ManagePeople = function ManagePeople(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountInfo = _useState2[0],\n      setAccountInfo = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderAccounts = _useState4[0],\n      requestRenderAccounts = _useState4[1];\n\n  useEffect(function () {\n    var email = props.email ? props.email : \"amal.salim@gmail.com\";\n    var request_body = JSON.stringify({\n      \"email\": email\n    });\n    fetch('http://127.0.0.1:8000/account/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: request_body\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setAccountInfo(json);\n    });\n  }, [renderAccounts]);\n\n  var renderAccountsAgain = function renderAccountsAgain() {\n    requestRenderAccounts(renderAccounts * -1);\n  };\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      viewScroller = _useState6[0],\n      setViewScroller = _useState6[1];\n\n  var accountPerPerson = {};\n\n  for (var idx = 0; idx < accountInfo.length; idx++) {\n    var curEmail = accountInfo[idx][\"email\"];\n\n    if (!(curEmail in accountPerPerson)) {\n      accountPerPerson[curEmail] = [];\n    }\n\n    accountPerPerson[curEmail].push(accountInfo[idx]);\n  }\n\n  var accountsView = [];\n  var account = props.email in accountPerPerson ? accountPerPerson[props.email] : [];\n  accountsView.push(React.createElement(Person, _extends({\n    personEmail: props.email,\n    accountDetails: account,\n    allowAddAccount: true,\n    key: uuidv4(),\n    renderAccountsAgain: renderAccountsAgain\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  })));\n\n  for (email in accountPerPerson) {\n    if (email == props.email) {\n      continue;\n    }\n\n    if (accountPerPerson[email][\"restricted\"]) {\n      accountsView.push(React.createElement(RestrictedPerson, _extends({\n        personEmail: email,\n        accountDetails: accountPerPerson[email],\n        key: uuidv4()\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }\n      })));\n    } else {\n      accountsView.push(React.createElement(Person, _extends({\n        personEmail: email,\n        accountDetails: accountPerPerson[email],\n        key: uuidv4()\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }\n      })));\n    }\n  }\n\n  if (!accountInfo) {\n    return React.createElement(GradientBackground, {\n      colors: [theme.subleSecondary, theme.subtlePrimary],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        height: 150,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, React.createElement(ActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n      scrollEnabled: false,\n      contentContainerStyle: {\n        height: constants.windowHeight - 50\n      },\n      horizontal: true,\n      ref: function ref(node) {\n        return setViewScroller(node);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, accountsView), React.createElement(ManagePeopleBottomToolbar, _extends({\n      scroller: viewScroller,\n      maxScrollCount: accountsView.length\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })));\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.PersonalInformationReducer.email\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePeople);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/transactions/details/managePeople/ManagePeople.js"],"names":["React","useEffect","useState","connect","TouchableWithoutFeedback","ScrollView","constants","uuidv4","Person","ManagePeopleBottomToolbar","RestrictedPerson","GradientBackground","theme","ManagePeople","props","accountInfo","setAccountInfo","renderAccounts","requestRenderAccounts","email","request_body","JSON","stringify","fetch","method","headers","Accept","body","then","response","json","renderAccountsAgain","viewScroller","setViewScroller","accountPerPerson","idx","length","curEmail","push","accountsView","account","subleSecondary","subtlePrimary","height","justifyContent","alignContent","windowHeight","node","mapStateToProps","state","PersonalInformationReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { TouchableWithoutFeedback, ScrollView } from \"react-native-gesture-handler\";\nimport constants, { uuidv4 } from \"../../../common/constants\";\nimport Person from \"./Person\";\nimport ManagePeopleBottomToolbar from \"./ManagePeopleBottomToolbar\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport RestrictedPerson from \"./RestrictedPerson\";\nimport GradientBackground from \"../../../common/GradientBackground\";\nimport { theme } from \"../../../common/styles\";\n\nconst ManagePeople = props => {\n\n    const [accountInfo, setAccountInfo] = useState('');\n    const [renderAccounts, requestRenderAccounts] = useState(1);\n\n    useEffect(() => {\n\n        var email = props.email ? props.email : \"amal.salim@gmail.com\"\n        var request_body = JSON.stringify({\n            \"email\": email\n        })\n\n        fetch('http://127.0.0.1:8000/account/', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: request_body\n        }).then((response) => response.json())\n            .then((json) => { setAccountInfo(json) });\n    }, [renderAccounts]);\n\n    const renderAccountsAgain = () => {\n        requestRenderAccounts(renderAccounts * -1)\n    }\n\n    const [viewScroller, setViewScroller] = useState(null)\n\n    var accountPerPerson = {}\n    for (let idx = 0; idx < accountInfo.length; idx++) {\n        let curEmail = accountInfo[idx][\"email\"]\n        if (!(curEmail in accountPerPerson)) {\n            accountPerPerson[curEmail] = []\n        }\n        accountPerPerson[curEmail].push(accountInfo[idx])\n    }\n\n    var accountsView = []\n\n    // first put in the signed in user\n    var account = props.email in accountPerPerson ? accountPerPerson[props.email] : []\n    accountsView.push(<Person personEmail={props.email} accountDetails={account} allowAddAccount={true} key={uuidv4()} renderAccountsAgain={renderAccountsAgain} {...props} />)\n\n    for (email in accountPerPerson) {\n        if (email == props.email) {\n            continue\n        }\n        if (accountPerPerson[email][\"restricted\"]) {\n            accountsView.push(<RestrictedPerson personEmail={email} accountDetails={accountPerPerson[email]} key={uuidv4()} {...props} />)\n        } else {\n            accountsView.push(<Person personEmail={email} accountDetails={accountPerPerson[email]} key={uuidv4()} {...props} />)\n        }\n    }\n\n    // Now put in restricted people\n    if (!accountInfo) {\n        return (\n            < GradientBackground colors={[theme.subleSecondary, theme.subtlePrimary]} >\n                <View style={{ height: 150, justifyContent: \"center\", alignContent: \"center\" }}>\n                    <ActivityIndicator />\n                </View>\n            </ GradientBackground>\n        )\n    } else {\n        return (\n            <>\n                <ScrollView scrollEnabled={false} contentContainerStyle={{ height: constants.windowHeight - 50 }} horizontal={true} ref={(node) => setViewScroller(node)} >\n                    {accountsView}\n                </ScrollView>\n                <ManagePeopleBottomToolbar scroller={viewScroller} maxScrollCount={accountsView.length} {...props} />\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        email: state.PersonalInformationReducer.email,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePeople)\n"]},"metadata":{},"sourceType":"module"}