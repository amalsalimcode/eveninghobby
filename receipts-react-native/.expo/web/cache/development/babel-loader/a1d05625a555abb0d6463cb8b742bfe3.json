{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/PassCodeInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ShadowPropTypesIOS } from \"react-native-web/dist/index\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { commonStyles, theme } from \"../common/styles\";\nimport { connect } from 'react-redux';\n\nvar PassCodeInput = function PassCodeInput(props) {\n  useEffect(function () {}, []);\n  var borderWidth = props.borderWidth ? props.borderWidth : 0;\n\n  var passhandler = function passhandler(enteredText) {\n    var filteredText = enteredText.replace(/[^0-9]/g, '');\n    props.setPassCode ? props.setPassCode(filteredText) : props.setCode(filteredText);\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputView), {}, {\n      flexDirection: \"row\",\n      paddingLeft: 15,\n      borderColor: \"red\",\n      borderWidth: borderWidth\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: {\n      marginRight: 10,\n      marginTop: 13,\n      height: 20,\n      width: 20\n    },\n    source: require(\"../../../assets/lock.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, commonStyles.inputText), {}, {\n      flex: 1\n    }),\n    placeholder: props.placeholder ? props.placeholder : \"4 digit passcode\",\n    onChangeText: props.onChangeText ? props.onChangeText : passhandler,\n    value: props.value ? props.value : props.code,\n    placeholderTextColor: theme.placeholderText,\n    keyboardType: \"number-pad\",\n    secureTextEntry: true,\n    maxLength: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    code: state.PersonalInformationReducer.code\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCode: function setCode(entered_code) {\n      dispatch({\n        type: 'SET_CODE',\n        new_code: entered_code\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PassCodeInput);","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/login/PassCodeInput.js"],"names":["ShadowPropTypesIOS","React","useState","useEffect","commonStyles","theme","connect","PassCodeInput","props","borderWidth","passhandler","enteredText","filteredText","replace","setPassCode","setCode","inputView","flexDirection","paddingLeft","borderColor","marginRight","marginTop","height","width","require","inputText","flex","placeholder","onChangeText","value","code","placeholderText","mapStateToProps","state","PersonalInformationReducer","mapDispatchToProps","dispatch","entered_code","type","new_code"],"mappings":";;;;;;;;;;;;;;SAA0GA,kB;AAC1G,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,YAAT,EAAuBC,KAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAE7BL,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;AAGA,MAAIM,WAAW,GAAGD,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAA1B,GAAwC,CAA1D;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAiB;AACnC,QAAIC,YAAY,GAAGD,WAAW,CAACE,OAAZ,CAAoB,SAApB,EAA+B,EAA/B,CAAnB;AACAL,IAAAA,KAAK,CAACM,WAAN,GAAoBN,KAAK,CAACM,WAAN,CAAkBF,YAAlB,CAApB,GAAsDJ,KAAK,CAACO,OAAN,CAAcH,YAAd,CAAtD;AACD,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCACNR,YAAY,CAACY,SADP;AACkBC,MAAAA,aAAa,EAAE,KADjC;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAEQC,MAAAA,WAAW,EAAE,KAFrB;AAE4BV,MAAAA,WAAW,EAAEA;AAFzC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEW,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,SAAS,EAAE,EAA9B;AAAkCC,MAAAA,MAAM,EAAE,EAA1C;AAA8CC,MAAAA,KAAK,EAAE;AAArD,KAAd;AAAyE,IAAA,MAAM,EAAEC,OAAO,4BAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,kCAAOpB,YAAY,CAACqB,SAApB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,MADP;AAEE,IAAA,WAAW,EAAElB,KAAK,CAACmB,WAAN,GAAoBnB,KAAK,CAACmB,WAA1B,GAAwC,kBAFvD;AAGE,IAAA,YAAY,EAAEnB,KAAK,CAACoB,YAAN,GAAqBpB,KAAK,CAACoB,YAA3B,GAA0ClB,WAH1D;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACqB,KAAN,GAAcrB,KAAK,CAACqB,KAApB,GAA4BrB,KAAK,CAACsB,IAJ3C;AAKE,IAAA,oBAAoB,EAAEzB,KAAK,CAAC0B,eAL9B;AAME,IAAA,YAAY,EAAC,YANf;AAOE,IAAA,eAAe,EAAE,IAPnB;AAQE,IAAA,SAAS,EAAE,CARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAqBD,CAjCD;;AAmCA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAEG,KAAK,CAACC,0BAAN,CAAiCJ;AADlC,GAAP;AAGD;;AAED,SAASK,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLrB,IAAAA,OAAO,EAAE,iBAACsB,YAAD,EAAkB;AAAED,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,QAAQ,EAAEF;AAA9B,OAAD,CAAR;AAAwD;AADhF,GAAP;AAGD;;AAED,eAAe/B,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5B,aAA7C,CAAf","sourcesContent":["import { View, TextInput, StyleSheet, KeyboardAvoidingView, Platform, Keyboard, TouchableWithoutFeedback, ShadowPropTypesIOS } from 'react-native'\nimport React, { useState, useEffect } from \"react\";\nimport { Image } from \"react-native\"\nimport { commonStyles, theme } from '../common/styles'\nimport { connect } from 'react-redux'\n\n/*\n * two ways of entering here:\n * 1. SignUp:\n *    1a. First time, no prop is passed in, and value is saved in redux\n *    1b. Second time, is to ensure values match with first time. all values are passed in\n * \n * 2. SignIn:\n *    Only called once, no prop is passed in and value is savied in redux\n */\n\nconst PassCodeInput = props => {\n\n  useEffect(() => {\n  }, []);\n\n  var borderWidth = props.borderWidth ? props.borderWidth : 0\n\n  const passhandler = (enteredText) => {\n    var filteredText = enteredText.replace(/[^0-9]/g, '')\n    props.setPassCode ? props.setPassCode(filteredText) : props.setCode(filteredText)\n  }\n\n  return (\n    <View style={{\n      ...commonStyles.inputView, flexDirection: \"row\",\n      paddingLeft: 15, borderColor: \"red\", borderWidth: borderWidth\n    }} >\n\n      <Image style={{ marginRight: 10, marginTop: 13, height: 20, width: 20 }} source={require('../../../assets/lock.png')} />\n\n      <TextInput\n        style={{ ...commonStyles.inputText, flex: 1 }}\n        placeholder={props.placeholder ? props.placeholder : \"4 digit passcode\"}\n        onChangeText={props.onChangeText ? props.onChangeText : passhandler}\n        value={props.value ? props.value : props.code}\n        placeholderTextColor={theme.placeholderText}\n        keyboardType=\"number-pad\"\n        secureTextEntry={true}\n        maxLength={4}\n      />\n\n    </View>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    code: state.PersonalInformationReducer.code,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCode: (entered_code) => { dispatch({ type: 'SET_CODE', new_code: entered_code }) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PassCodeInput)"]},"metadata":{},"sourceType":"module"}