{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/AddReceipt.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport constants, { hasNotch, getTopToolbarHeight, getFormattedDate } from \"../common/constants\";\nimport { theme } from \"../common/styles\";\nimport { TextInput, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { connect } from \"react-redux\";\nimport GradientBackground from \"../common/GradientBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport TopToolbar from \"./TopToolbar\";\nimport ChangeDate from \"../transactions/summary/ChangeDate\";\nimport { TextInputMask } from 'react-native-masked-text';\nvar imageWidth = constants.windowWidth - 100;\nvar imageHeight = constants.windowHeight * 0.7 - 100;\nvar formHeight = constants.windowHeight - imageHeight - getTopToolbarHeight() - 50;\nvar totalHeight = constants.windowHeight - imageHeight - 125 - getTopToolbarHeight();\n\nvar AddReceipt = function AddReceipt(props) {\n  var _useState = useState(0.00),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      store = _useState4[0],\n      setStore = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      memo = _useState6[0],\n      setMemo = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showDatePicker = _useState8[0],\n      setShowDatePicker = _useState8[1];\n\n  var _useState9 = useState(new Date()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedDate = _useState10[0],\n      setSelectedDate = _useState10[1];\n\n  useEffect(function () {}, []);\n\n  function sendPictureBackend() {\n    var localUri, filename, match, type, formData;\n    return _regeneratorRuntime.async(function sendPictureBackend$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            localUri = props.route.params[\"img\"];\n            filename = localUri.split('/').pop();\n            match = /\\.(\\w+)$/.exec(filename);\n            type = match ? \"image/\" + match[1] : \"image\";\n            formData = new FormData();\n            formData.append('image', {\n              uri: localUri,\n              name: 'test.jpg',\n              type: type\n            });\n            formData.append('amount', amount);\n            formData.append('memo', memo);\n            formData.append('store', store);\n            formData.append('purchaseDate', JSON.stringify({\n              'year': selectedDate.getFullYear(),\n              'date': selectedDate.getDate(),\n              'month': selectedDate.getMonth()\n            }));\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(fetch(constants.ngrokHost + 'receipt/upload', {\n              method: 'POST',\n              body: formData,\n              headers: {\n                'content-type': 'multipart/form-data'\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              props.addSingleReceipt(json);\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(GradientBackground, {\n    colors: [theme.subleSecondary, theme.subtlePrimary],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: \"flex-end\",\n      flex: 1,\n      paddingBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, React.createElement(TopToolbar, _extends({}, props, {\n    done: sendPictureBackend,\n    delete: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, React.createElement(ImageZoom, {\n    cropWidth: Dimensions.get('window').width,\n    cropHeight: imageHeight,\n    imageWidth: imageWidth,\n    imageHeight: imageHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"stretch\",\n    style: {\n      width: imageWidth,\n      height: imageHeight\n    },\n    source: {\n      uri: props.route.params[\"img\"]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })))), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      marginHorizontal: \"3%\",\n      marginVertical: 25,\n      height: formHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n      width: \"40%\",\n      justifyContent: \"center\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setShowDatePicker(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, \" \", getFormattedDate(selectedDate), \" \"))), React.createElement(View, {\n    style: {\n      marginHorizontal: \"2%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInputMask, {\n    type: 'money',\n    options: {\n      precision: 2,\n      separator: '.',\n      delimiter: '.',\n      unit: '$',\n      suffixUnit: ''\n    },\n    style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n      width: \"55%\"\n    }),\n    value: amount,\n    onChangeText: function onChangeText(text) {\n      setAmount(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  })), React.createElement(TextInput, {\n    placeholder: \"Store Name\",\n    style: styles.textInput,\n    maxLength: 50,\n    onChangeText: setStore,\n    value: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Memo\",\n    style: styles.textInput,\n    maxlength: 200,\n    onChangeText: setMemo,\n    value: memo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }))))), React.createElement(ChangeDate, {\n    visible: showDatePicker,\n    setVisible: setShowDatePicker,\n    setDate: setSelectedDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addSingleReceipt: function addSingleReceipt(receipt) {\n      return dispatch({\n        type: \"ADD_SINGLE_RECEIPT\",\n        receipt: receipt\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddReceipt);\nvar styles = StyleSheet.create({\n  newAccountContainer: {\n    alignItems: \"center\",\n    backgroundColor: theme.primary,\n    borderRadius: 10\n  },\n  inputView: {\n    margin: 10,\n    width: \"50%\",\n    backgroundColor: theme.inputBg,\n    borderRadius: 45,\n    height: 25,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    paddingLeft: 20\n  },\n  container: {\n    flex: 1\n  },\n  header: {\n    fontSize: 36,\n    marginBottom: 48\n  },\n  textInput: {\n    height: 35,\n    borderColor: \"#000000\",\n    borderBottomWidth: 1,\n    marginBottom: formHeight / 10\n  },\n  btnContainer: {\n    backgroundColor: \"white\",\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/Users/bismillah/Desktop/eveninghobby/receipts-react-native/src/components/receipts/AddReceipt.js"],"names":["React","useEffect","useState","constants","hasNotch","getTopToolbarHeight","getFormattedDate","theme","TextInput","TouchableWithoutFeedback","MaterialIcons","connect","GradientBackground","ImageZoom","TopToolbar","ChangeDate","TextInputMask","imageWidth","windowWidth","imageHeight","windowHeight","formHeight","totalHeight","AddReceipt","props","amount","setAmount","store","setStore","memo","setMemo","showDatePicker","setShowDatePicker","Date","selectedDate","setSelectedDate","sendPictureBackend","localUri","route","params","filename","split","pop","match","exec","type","formData","FormData","append","uri","name","JSON","stringify","getFullYear","getDate","getMonth","fetch","ngrokHost","method","body","headers","then","response","json","addSingleReceipt","subleSecondary","subtlePrimary","Platform","OS","flex","justifyContent","paddingBottom","Keyboard","dismiss","backgroundColor","Dimensions","get","width","height","marginHorizontal","marginVertical","flexDirection","styles","textInput","precision","separator","delimiter","unit","suffixUnit","text","mapStateToProps","state","mapDispatchToProps","dispatch","receipt","StyleSheet","create","newAccountContainer","alignItems","primary","borderRadius","inputView","margin","inputBg","marginBottom","paddingLeft","container","header","fontSize","borderColor","borderBottomWidth","btnContainer","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, Image, KeyboardAvoidingView, Keyboard } from \"react-native\";\nimport constants, { hasNotch, getTopToolbarHeight, getFormattedDate } from \"../common/constants\";\nimport { theme } from '../common/styles';\nimport { TextInput, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { connect } from \"react-redux\";\nimport GradientBackground from \"../common/GradientBackground\";\n\nimport { Dimensions } from 'react-native';\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport TopToolbar from \"./TopToolbar\";\nimport ChangeDate from \"../transactions/summary/ChangeDate\";\nimport { TextInputMask } from 'react-native-masked-text'\n\nconst imageWidth = constants.windowWidth - 100\nconst imageHeight = constants.windowHeight * 0.7 - 100\nconst formHeight = constants.windowHeight - imageHeight - getTopToolbarHeight() - 50 // 50 is form Margin\nconst totalHeight = constants.windowHeight - imageHeight - 125 - getTopToolbarHeight()\n\nconst AddReceipt = props => {\n\n    const [amount, setAmount] = useState(0.00);\n    const [store, setStore] = useState('');\n    const [memo, setMemo] = useState('');\n    const [showDatePicker, setShowDatePicker] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    useEffect(() => {\n    }, []);\n\n    async function sendPictureBackend() {\n        // ImagePicker saves the taken photo to disk and returns a local URI to it\n        let localUri = props.route.params[\"img\"]\n        let filename = localUri.split('/').pop();\n\n        // Infer the type of the image\n        let match = /\\.(\\w+)$/.exec(filename);\n        let type = match ? `image/${match[1]}` : `image`;\n\n        // Upload the image using the fetch and FormData APIs\n        let formData = new FormData();\n        // Assume \"photo\" is the name of the form field the server expects\n        formData.append('image', { uri: localUri, name: 'test.jpg', type: type })\n        formData.append('amount', amount)\n        formData.append('memo', memo)\n        formData.append('store', store)\n        formData.append('purchaseDate', JSON.stringify({\n            'year': selectedDate.getFullYear(),\n            'date': selectedDate.getDate(),\n            'month': selectedDate.getMonth()})\n        )\n\n        await fetch(constants.ngrokHost + 'receipt/upload', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'content-type': 'multipart/form-data',\n            },\n        }).then((response) => response.json())\n            .then((json) => { props.addSingleReceipt(json) })\n    }\n\n    return (\n        < GradientBackground colors={[theme.subleSecondary, theme.subtlePrimary]} >\n            <KeyboardAvoidingView\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n                style={{ flex: 1 }}>\n\n                <View style={{ justifyContent: \"flex-end\", flex: 1, paddingBottom: 0 }}>\n                    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n                        <TopToolbar {...props} done={sendPictureBackend} delete={true} />\n                        <View style={{ backgroundColor: \"black\" }}>\n                            <ImageZoom cropWidth={Dimensions.get('window').width} cropHeight={imageHeight}\n                                imageWidth={imageWidth} imageHeight={imageHeight}>\n                                <Image resizeMode=\"stretch\" style={{ width: imageWidth, height: imageHeight }}\n                                    source={{ uri: props.route.params[\"img\"] }} />\n                            </ImageZoom>\n                        </View>\n                    </TouchableWithoutFeedback>\n                    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n                        <View style={{ marginHorizontal: \"3%\", marginVertical: 25, height: formHeight }}>\n                            <View style={{ flexDirection: \"row\" }}>\n                                <View style={{ ...styles.textInput, width: \"40%\", justifyContent: \"center\" }}>\n                                    <TouchableWithoutFeedback onPress={() => { setShowDatePicker(true) }}>\n                                        <Text> {getFormattedDate(selectedDate)} </Text>\n                                    </TouchableWithoutFeedback>\n                                </View>\n                                <View style={{ marginHorizontal: \"2%\" }} />\n                                <TextInputMask type={'money'} options={{ precision: 2, separator: '.', delimiter: '.', unit: '$', suffixUnit: '' }}\n                                    style={{ ...styles.textInput, width: \"55%\" }} value={amount} onChangeText={(text) => { setAmount(text) }} />\n                            </View>\n                            <TextInput placeholder=\"Store Name\" style={styles.textInput} maxLength={50} onChangeText={setStore} value={store} />\n                            <TextInput placeholder=\"Memo\" style={styles.textInput} maxlength={200} onChangeText={setMemo} value={memo} />\n                        </View>\n                    </TouchableWithoutFeedback>\n                </View>\n\n            </KeyboardAvoidingView>\n            <ChangeDate visible={showDatePicker} setVisible={setShowDatePicker} setDate={setSelectedDate} />\n        </GradientBackground>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addSingleReceipt: (receipt) => dispatch({ type: \"ADD_SINGLE_RECEIPT\", receipt: receipt })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddReceipt)\n\nvar styles = StyleSheet.create({\n    newAccountContainer: {\n        alignItems: \"center\",\n        backgroundColor: theme.primary,\n        borderRadius: 10\n    },\n    inputView: {\n        margin: 10,\n        width: \"50%\",\n        backgroundColor: theme.inputBg,\n        borderRadius: 45,\n        height: 25,\n        marginBottom: 20,\n        justifyContent: \"center\",\n        paddingLeft: 20,\n    },\n    container: {\n        flex: 1\n    },\n    header: {\n        fontSize: 36,\n        marginBottom: 48\n    },\n    textInput: {\n        height: 35,\n        borderColor: \"#000000\",\n        borderBottomWidth: 1,\n        marginBottom: formHeight / 10,\n    },\n    btnContainer: {\n        backgroundColor: \"white\",\n        marginTop: 12\n    }\n});"]},"metadata":{},"sourceType":"module"}